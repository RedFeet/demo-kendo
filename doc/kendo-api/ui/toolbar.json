{"name":"kendo.ui.ToolBar","children":[{"name":"Events","children":[{"name":"overflowOpen","children":[{"name":"Example - subscribe to the \"overflowOpen\" event after initialization"},{"name":"Example - subscribe to the \"overflowOpen\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.preventDefault `Function`"}]}],"description":"Fires when the overflow popup container is about to open.","args":["e.sender","e.preventDefault"]},{"name":"overflowClose","children":[{"name":"Example - subscribe to the \"overflowClose\" event after initialization"},{"name":"Example - subscribe to the \"overflowClose\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.preventDefault `Function`"}]}],"description":"Fires when the overflow popup container is about to close.","args":["e.sender","e.preventDefault"]},{"name":"toggle","children":[{"name":"Example - subscribe to the \"toggle\" event after initialization"},{"name":"Example - subscribe to the \"toggle\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.id `String`"},{"name":"e.checked `Boolean`"},{"name":"e.target `jQuery`"}]}],"description":"Fires when the user changes the checked state of a toggle button.> **Important** `click` event does not fire for buttons that have `togglable: true`","args":["e.sender","e.id","e.checked","e.target"]},{"name":"open","children":[{"name":"Example - subscribe to the \"open\" event after initialization and prevent the popup closing"},{"name":"Example - subscribe to the \"open\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.preventDefault `Function`"},{"name":"e.SplitButton `jQuery`"}]}],"description":"Fires when the Split Button's popup opens.","args":["e.sender","e.preventDefault","e.SplitButton"]},{"name":"close","children":[{"name":"Example - subscribe to the \"close\" event after initialization and prevent the popup closing"},{"name":"Example - subscribe to the \"close\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.preventDefault `Function`"},{"name":"e.SplitButton `jQuery`"}]}],"description":"Fires when the SplitButton's popup closes.","args":["e.sender","e.preventDefault","e.SplitButton"]},{"name":"click","children":[{"name":"Example - subscribe to the \"click\" event after initialization"},{"name":"Example - subscribe to the \"click\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.ToolBar`"},{"name":"e.id `String`"},{"name":"e.target `jQuery`"}]}],"description":"Fires when the user clicks a command button.> The event does not fire for togglable buttons. If the button has `togglable: true` use the `toggle` event.","args":["e.sender","e.id","e.target"]}]},{"name":"Methods","children":[{"name":"toggle","children":[{"name":"Example - change the state of togglable buttons using the API"}],"parameters":[],"description":"Change the state of a togglable button.> This method does **not** trigger the `toggle` event!"},{"name":"show","children":[{"name":"Example - show button from the ToolBar"},{"name":"Parameters","children":[{"name":"command `String|Element|jQuery`"}]}],"parameters":[{"name":"command `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the command to be shown. A string is treated as jQuery selector."}],"description":"Shows a hidden command in the ToolBar widget. The command is shown in the ToolBar container and overflow popup (if resizable is enabled)."},{"name":"remove","children":[{"name":"Example - removed button from the ToolBar"},{"name":"Parameters","children":[{"name":"command `String|Element|jQuery`"}]}],"parameters":[{"name":"command `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the command to be removed. A string is treated as jQuery selector."}],"description":"Removes a command from the ToolBar widget. The command is removed from the ToolBar container and overflow popup (if resizable is enabled)."},{"name":"hide","children":[{"name":"Example - removed button from the ToolBar"},{"name":"Parameters","children":[{"name":"command `String|Element|jQuery`"}]}],"parameters":[{"name":"command `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the command to be hidden. A string is treated as jQuery selector."}],"description":"Hides a command from the ToolBar widget. The command is hidden from the ToolBar container and overflow popup (if resizable is enabled)."},{"name":"getSelectedFromGroup","children":[{"name":"Example - get selected button from group with name \"radio\""},{"name":"Parameters","children":[{"name":"groupName `String`"}]}],"parameters":[{"name":"groupName `String`","description":"The name of the group."}],"description":"Returns the selected toggle button from the specified group."},{"name":"enable","children":[{"name":"Example - disable command"},{"name":"Example - enable command"},{"name":"Parameters","children":[{"name":"enable `Boolean`"},{"name":"command `String|Element|jQuery`"}]}],"parameters":[{"name":"enable `Boolean`","description":"A boolean flag that determines whether the command should be enabled (true) or disabled (false). If omitted the command will be enabled."},{"name":"command `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the command to be enabled or disabled. A string is treated as jQuery selector."}],"description":"Enables or disables the specified command. If the second parameter is omitted it will be treated as `true` and the command will be enabled."},{"name":"destroy","children":[{"name":"Example"}],"parameters":[],"description":"Prepares the widget for safe removal from DOM. Detaches all event handlers and removes jQuery.data attributes to avoid memory leaks. Calls destroy method of any child Kendo widgets.> This method does not remove the widget element from DOM."},{"name":"add","children":[{"name":"Example - add button to the ToolBar"},{"name":"Parameters","children":[{"name":"command `Object`"}]}],"parameters":[{"name":"command `Object`","description":"An object with valid command configuration options."}],"description":"Adds new command to the ToolBar widget. Accepts object with [valid command configuration options](/web/toolbar/overview#command-types)."}]},{"name":"Configuration","children":[{"name":"items.url","children":[{"name":"Example"}],"type":"String","description":"Specifies the url to navigate to."},{"name":"items.type","children":[{"name":"Example"}],"type":"String","description":"Specifies the command type. Supported types are \"button\", \"splitButton\", \"buttonGroup\", \"separator\".> Specifying the type is **mandatory**. Only commands that have a `template` does not need `type`."},{"name":"items.toggle","children":[{"name":"Example"}],"type":"Function","description":"Specifies the toggle event handler of the button. Applicable only for commands of type `button` and `togglable: true`."},{"name":"items.togglable","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies if the button is togglable, e.g. has a selected and unselected state.> Buttons with `togglable: true` will fire the `toggle` event. `click` event will **not** be fired."},{"name":"items.text","children":[{"name":"Example"}],"type":"String","description":"Sets the text of the button."},{"name":"items.template","children":[{"name":"Example"}],"type":["String","Function"],"description":"Specifies what element will be added in the ToolBar wrapper. Items with template does not have a type.> If `overflowTemplate` is not defined for a template command, than the command will be threated as `overflow: \"never\"`."},{"name":"items.spriteCssClass","children":[{"name":"Example"}],"type":"String","description":"Defines a CSS class (or multiple classes separated by spaces) which will be used for button icon."},{"name":"items.showText","children":[{"name":"Example"}],"type":"String","default":" \"both\"","description":"Specifies where the text will be displayed. Possible values are: \"toolbar\", \"overflow\" or \"both\" (default)."},{"name":"items.showIcon","children":[{"name":"Example"}],"type":"String","default":" \"both\"","description":"Specifies where the button icon will be displayed. Possible values are: \"toolbar\", \"overflow\" or \"both\" (default)."},{"name":"items.selected","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies if the toggle button is initially selected. Applicable only for buttons with `togglable: true`."},{"name":"items.primary","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies whether the button is primary. Primary buttons receive different styling."},{"name":"items.overflowTemplate","children":[{"name":"Example"}],"type":["String","Function"],"description":"Specifies what element will be added in the command overflow popup. Applicable only for items that have a template."},{"name":"items.overflow","children":[{"name":"Example"}],"type":"String","default":" \"auto\"","description":"Specifies how the button behaves when the ToolBar is resized. Possible values are: \"always\", \"never\" or \"auto\" (default)."},{"name":"items.menuButtons.url","children":[{"name":"Example"}],"type":"String","description":"Specifies the url of the menu button to navigate to."},{"name":"items.menuButtons.text","children":[{"name":"Example"}],"type":"String","description":"Specifies the text of the menu buttons."},{"name":"items.menuButtons.spriteCssClass","children":[{"name":"Example"}],"type":"String","description":"Defines a CSS class (or multiple classes separated by spaces) which will be used for menu button icon."},{"name":"items.menuButtons.imageUrl","children":[{"name":"Example"}],"type":"String","description":"If set, the ToolBar will render an image with the specified URL in the menu button."},{"name":"items.menuButtons.id","children":[{"name":"Example"}],"type":"String","description":"Specifies the ID of the menu buttons.> By design the widget will render two buttons - the one located in the ToolBar container will receive the specified ID, the one located in the Overflow Popup container will receive the specified ID but with *_overflow* suffix. If the ID will be used for determining which button is clicked in the `click` or `toggle` event handler, the developer should use the ID property of the event data which always contains the specified ID without suffix."},{"name":"items.menuButtons.icon","children":[{"name":"Example"}],"type":"String","description":"Sets icon for the menu buttons. The icon should be one of the existing in the Kendo UI theme sprite."},{"name":"items.menuButtons.hidden","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Determines if a button is visible or hidden. By default buttons are visible."},{"name":"items.menuButtons.enable","children":[{"name":"Example"}],"type":"Boolean","description":"Specifies whether the menu button is initially enabled or disabled."},{"name":"items.menuButtons.attributes","children":[{"name":"Example"}],"type":"Object","description":"Specifies the HTML attributes of a menu button.> HTML attributes which are JavaScript keywords (e.g. class) must be quoted."},{"name":"items.menuButtons","children":[{"name":"Example"}],"type":"Array","description":"Specifies the menu buttons of a SplitButton."},{"name":"items.imageUrl","children":[{"name":"Example"}],"type":"String","description":"If set, the ToolBar will render an image with the specified URL in the button."},{"name":"items.id","children":[{"name":"Example"}],"type":"String","description":"Specifies the ID of the button.> By design the widget will render two buttons - the one located in the ToolBar container will receive the specified ID, the one located in the Overflow Popup container will receive the specified ID but with *_overflow* suffix. If the ID will be used for determining which button is clicked in the `click` or `toggle` event handler, the developer should use the ID property of the event data which always contains the specified ID without suffix."},{"name":"items.icon","children":[{"name":"Example"}],"type":"String","description":"Sets icon for the item. The icon should be one of the existing in the Kendo UI theme sprite."},{"name":"items.hidden","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Determines if a button is visible or hidden. By default buttons are visible."},{"name":"items.group","children":[{"name":"Example"}],"type":"String","description":"Assigns the button to a group. Applicable only for buttons with `togglable: true`."},{"name":"items.enable","children":[{"name":"Example"}],"type":"Boolean","default":" true","description":"Specifies whether the control is initially enabled or disabled. Default value is \"true\"."},{"name":"items.click","children":[{"name":"Example"}],"type":"Function","description":"Specifies the click event handler of the button. Applicable only for commands of type `button` and `splitButton`."},{"name":"items.buttons.url","children":[{"name":"Example"}],"type":"String","description":"Specifies the url of the button to navigate to."},{"name":"items.buttons.text","children":[{"name":"Example"}],"type":"String","description":"Specifies the text of the menu button."},{"name":"items.buttons.togglable","children":[{"name":"Example"}],"type":"Boolean","description":"Specifies if the button is togglable, e.g. has a selected and unselected state. Applicable only for the children of a ButtonGroup."},{"name":"items.buttons.toggle","children":[{"name":"Example"}],"type":"Function","description":"Specifies the toggle event handler of the button. Applicable only for the children of a ButtonGroup."},{"name":"items.buttons.spriteCssClass","children":[{"name":"Example"}],"type":"String","description":"Defines a CSS class (or multiple classes separated by spaces) which will be used for button icon."},{"name":"items.buttons.showText","children":[{"name":"Example"}],"type":"String","default":" \"both\"","description":"Specifies where the text of the menu button will be displayed. Applicable only for the buttons of a ButtonGroup."},{"name":"items.buttons.showIcon","children":[{"name":"Example"}],"type":"String","default":" \"both\"","description":"Specifies where the icon of the button will be displayed. Applicable only for the children of a ButtonGroup."},{"name":"items.buttons.selected","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies if the toggle button is initially selected. Applicable only for the children of a ButtonGroup that has togglable true."},{"name":"items.buttons.imageUrl","children":[{"name":"Example"}],"type":"String","description":"If set, the ToolBar will render an image with the specified URL in the button."},{"name":"items.buttons.id","children":[{"name":"Example"}],"type":"String","description":"Specifies the ID of the button.> By design the widget will render two buttons - the one located in the ToolBar container will receive the specified ID, the one located in the Overflow Popup container will receive the specified ID but with *_overflow* suffix. If the ID will be used for determining which button is clicked in the `click` or `toggle` event handler, the developer should use the ID property of the event data which always contains the specified ID without suffix."},{"name":"items.buttons.icon","children":[{"name":"Example"}],"type":"String","description":"Sets icon for the menu button. The icon should be one of the existing in the Kendo UI theme sprite."},{"name":"items.buttons.hidden","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Determines if the button is visible or hidden. By default the buttons are visible."},{"name":"items.buttons.group","children":[{"name":"Example"}],"type":"String","description":"Assigns the button to a group. Applicable only for the children of a ButtonGroup that has togglable true."},{"name":"items.buttons.enable","children":[{"name":"Example"}],"type":"Boolean","default":" true","description":"Specifies whether the button is initially enabled or disabled."},{"name":"items.buttons.click","children":[{"name":"Example"}],"type":"Function","description":"Specifies the click event handler of the button. Applicable only for the children of a ButtonGroup."},{"name":"items.buttons.attributes","children":[{"name":"Example"}],"type":"Object","description":"Specifies the HTML attributes of a ButtonGroup's button.> HTML attributes which are JavaScript keywords (e.g. class) must be quoted."},{"name":"items.buttons","children":[{"name":"Example"}],"type":"Array","description":"Specifies the buttons of ButtonGroup."},{"name":"items.attributes","children":[{"name":"Example - adding custom class to a button"}],"type":"Object","description":"Specifies the HTML attributes of a ToolBar button.> HTML attributes which are JavaScript keywords (e.g. class) must be quoted."},{"name":"items","children":[{"name":"Example - initialize ToolBar with Button, Toggle Button and SplitButton"}],"type":"Array","description":"A JavaScript array that contains the ToolBar's commands configuration.> For more information regarding supported commands and their configuration properties check the [Getting Started topic](/web/toolbar/overview#command-types)."},{"name":"resizable","children":[{"name":"Example - Resizable and Non-Resizable ToolBar"}],"type":"Boolean","default":" true","description":"If `resizable` is set to `true` the widget will detect changes in the viewport width and hides the overflowing controls in the command overflow popup.> When set to `true`, the resizable configuration triggers `overflow: hidden;` CSS property. "}]}]}