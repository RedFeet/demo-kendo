{"name":"kendo.ui.FlatColorPicker","children":[{"name":"Events","children":[{"name":"change","children":[{"name":"Example - subscribe to the \"change\" event after initialization"},{"name":"Example - subscribe to the \"change\" event during initialization"},{"name":"Event Data","children":[{"name":"e.value `String`"}]}],"description":"Triggers when a new color has been selected.","args":["e.value"]}]},{"name":"Methods","children":[{"name":"enable","children":[{"name":"Example - disable the flat color picker"},{"name":"Parameters","children":[{"name":"enable `Boolean` *(optional)*"}]}],"parameters":[{"name":"enable `Boolean` *(optional)*","description":"Whether the widget should be enabled (`true`) or disabled (`false`). If not specified, the method will enable the widget."}],"description":"Enables or disables the widget."},{"name":"color","children":[{"name":"Returns"},{"name":"Parameters","children":[{"name":"color `kendo.Color` *(optional)*"}]}],"parameters":[{"name":"color `kendo.Color` *(optional)*","description":"The color that should be set as the current value"}],"description":"Get or set the selected color. If no argument is given, this returns the currently selected color as a [`kendo.Color` object](/api/javascript/color)."},{"name":"value `String|Color` *(default: null)*","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"color `String` *(optional)*"}]}],"parameters":[{"name":"color `String` *(optional)*"}],"description":"Get or set the selected color. If no argument is given, this returns thecurrently selected color as a string in format #FFFFFF when the `opacity`option is off, or rgba(255, 255, 255, 1) when `opacity` is requested.If one argument is given, it selects the new color and updates the UI.  Theargument can be a string in hex, rgb or rgba format, or a [Color][] object.This does not trigger the \"change\" event."},{"name":"focus","children":[{"name":"Example"}],"parameters":[],"description":"Focuses the widget."}]},{"name":"Configuration","children":[{"name":"messages.cancel","children":[{"name":"Example"}],"type":"String","description":"Allows customization of \"Cancel\" label."},{"name":"messages.apply","children":[{"name":"Example"}],"type":"String","description":"Allows customization of \"Apply\" label."},{"name":"messages","children":[{"name":"Example"}],"type":"Object","description":"Allows customization of \"Apply\" / \"Cancel\" labels."},{"name":"autoupdate","children":[{"name":"Example"}],"type":"Boolean","default":" true","description":"Specifies whether the UI should be updated while the user is typing inthe input field, whenever a valid color can be parsed.  If you pass`false` for this, the widget will update only when ENTER is pressed."},{"name":"preview","children":[{"name":"Example"}],"type":"Boolean","default":" true","description":"Specifies whether we should display the preview bar which displays thecurrent color and the input field."},{"name":"value","children":[{"name":"Example"}],"type":["String "," Color"],"default":" null","description":"Specifies the initially selected color."},{"name":"buttons","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies whether the widget should display the Apply / Cancel buttons."},{"name":"opacity","children":[{"name":"Example"}],"type":"Boolean","default":" false","description":"Specifies whether we should display the opacity slider to allowselection of transparency."}]}]}