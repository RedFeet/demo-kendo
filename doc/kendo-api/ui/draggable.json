{"name":"kendo.ui.Draggable","children":[{"name":"Events","children":[{"name":"hold","children":[{"name":"Event Data","children":[{"name":"e.target `Element`"},{"name":"e.sender `kendo.ui.Draggable`"}]},{"name":"Example - hold to drag"}],"description":"Triggered only when `holdToDrag` is set to `true`. Fired before the `dragStart` event.The `hold` event represents a jQuery `mousedown` event and contains all the event data of the [jQuery Event Object](http://api.jquery.com/category/events/event-object/).","args":["e.target","e.sender"]},{"name":"dragstart","children":[{"name":"Event Data","children":[{"name":"e.target `Element`"},{"name":"e.sender `kendo.ui.Draggable`"}]},{"name":"Example - hide draggable element on dragend"}],"description":"Fired when item drag starts.The `dragstart` event represents a jQuery `mousedown` event and contains all the event data of the [jQuery Event Object](http://api.jquery.com/category/events/event-object/).","args":["e.target","e.sender"]},{"name":"dragend","children":[{"name":"Event Data","children":[{"name":"e.target `Element`"},{"name":"e.sender `kendo.ui.Draggable`"}]},{"name":"Example - show draggable element on dragend"}],"description":"Fired when item drag ends.The `dragend` event represents a jQuery `mouseup` event and contains all the event data of the [jQuery Event Object](http://api.jquery.com/category/events/event-object/).","args":["e.target","e.sender"]},{"name":"dragcancel","children":[{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.Draggable`"}]},{"name":"Example"}],"description":"Fired when item drag is canceled by pressing the Escape key.The `dragcancel` event represents a jQuery `keyup` event and contains all the event data of the [jQuery Event Object](http://api.jquery.com/category/events/event-object/).","args":["e.sender"]},{"name":"drag","children":[{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.Draggable`"},{"name":"e.target `Element`"}]},{"name":"Example - hook up to the event via bind method after initialization"},{"name":"Example - bind during the initialization"}],"description":"Fired while dragging. The `drag` event represents a jQuery `mousemove` event and contains all the event data of the [jQuery Event Object](http://api.jquery.com/category/events/event-object/).","args":["e.sender","e.target"]}]},{"name":"Methods","children":[{"name":"cancelHold","children":[{"name":"Example - cancel activated draggable"}],"parameters":[],"description":"Has effect only when `holdToDrag` is set to `true`. Cancels the activated state of the widget, caused by pressing and holding."}]},{"name":"Configuration","children":[{"name":"ignore","children":[{"name":"Example"}],"type":"Selector","description":"Specifies child elements for which the drag will not be initialized. Useful if the draggable contains input elements."},{"name":"holdToDrag","children":[{"name":"Example - hold to drag"}],"type":"Boolean","default":" false","description":"Suitable for touch oriented user interface, in order to avoid collision with the touch scrolling gesture.When set to `true`, the widget will be activated after the user taps and holds the finger on the element for a short amount of time.The *draggable* will also be activated by pressing, holding and lifting the finger without any movement. Dragging it afterwards will initiate the drag immediately.The activated mode can be canceled by calling [`cancelHold`](#methods-cancelHold)."},{"name":"hint","children":[{"name":"Example - customizing draggable tooltip"}],"type":["Function "," jQuery"],"description":"Provides a way for customization of the drag indicator. If a function is supplied, it receives one argument - the draggable element's jQuery object."},{"name":"group","children":[{"name":"Example - grouping draggable elements"}],"type":"String","default":" \"default\"","description":" Used to group sets of draggable and drop targets. A draggable with the same group value as a drop target will be accepted by the drop target."},{"name":"filter","children":[{"name":"Example"}],"type":"Selector","description":"Selects child elements that are draggable if a widget is attached to a container."},{"name":"distance","children":[{"name":"Example"}],"type":"Number","default":" 5","description":" The required distance that the mouse should travel in order to initiate a drag."},{"name":"cursorOffset","children":[{"name":"Example"}],"type":"Object","default":" null","description":" If set, specifies the offset of the hint relative to the mouse cursor/finger.By default, the hint is initially positioned on top of the draggable source offset. The option accepts an object with two keys: `top` and `left`."},{"name":"container","children":[{"name":"Example"}],"type":"jQuery","description":"If set, the hint movement is constrained to the container boundaries."},{"name":"autoScroll","children":[{"name":"Example - use autoScroll in a scrollable container"}],"type":"Boolean","default":" false","description":"If set to `true` the widget will auto-scroll the container when the mouse/finger is close to the top/bottom of it."},{"name":"axis","children":[{"name":"Example - initialize horizontally draggable element"}],"type":"String","default":" null","description":" Constrains the hint movement to either the horizontal (x) or vertical (y) axis. Can be set to either \"x\" or \"y\"."}]}]}