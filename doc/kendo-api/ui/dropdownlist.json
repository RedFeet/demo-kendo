{"name":"kendo.ui.DropDownList","children":[{"name":"Events","children":[{"name":"cascade","children":[{"name":"Example - subscribe to the \"select\" event after initialization"},{"name":"Example - subscribe to the \"select\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the value of the widget is changed via API or user interaction.","args":["e.sender"]},{"name":"select","children":[{"name":"Example - subscribe to the \"select\" event after initialization"},{"name":"Example - subscribe to the \"select\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"},{"name":"e.preventDefault `Function`"},{"name":"e.item `jQuery`"}]}],"description":"Fired when an item from the popup is selected by the user either with mouse/tap or with keyboard navigation.> **Important:** The event is not fired when an item is selected programmatically.> **Important:** Since version Q1 2015 (2015.1.318), the[option label has been moved outside the item list DOM collection](/backward-compatibility#kendo-ui-2015-q1).As a result, jQuery.index() can no longer be used to reliably detect if the option label is the selected dropdown item.A more appropriate approach would be to check if the selected dataItem value is an empty string,and/or check if the selected dateItem's text is equal to the optionLabel string.>> *  `e.sender.dataItem(e.item)[e.sender.options.dataValueField] == \"\"`> *  `e.sender.dataItem(e.item)[e.sender.options.dataTextField] == e.sender.options.optionLabel`","args":["e.sender","e.preventDefault","e.item"]},{"name":"open","children":[{"name":"Example - subscribe to the \"open\" event after initialization"},{"name":"Example - subscribe to the \"open\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the popup of the widget is opened by the user.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender"]},{"name":"filtering","children":[{"name":"Example - prevent filtering event when filter value is empty"},{"name":"Example - subscribe to the \"filtering\" event after initialization"},{"name":"Example - subscribe to the \"filtering\" event during initialization"},{"name":"Event Data","children":[{"name":"e.filter `Object`"},{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the widget is about to filter the data source.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.filter","e.sender"]},{"name":"dataBound","children":[{"name":"Example - subscribe to the \"dataBound\" event after initialization"},{"name":"Example - subscribe to the \"dataBound\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the widget is bound to data from its data source.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender"]},{"name":"close","children":[{"name":"Example - subscribe to the \"close\" event after initialization"},{"name":"Example - subscribe to the \"close\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the popup of the widget is closed.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender"]},{"name":"change","children":[{"name":"Example - subscribe to the \"change\" event after initialization"},{"name":"Example - subscribe to the \"change\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.DropDownList`"}]}],"description":"Fired when the value of the widget is changed by the user.The event handler function context (available via the `this` keyword) will be set to the widget instance.> **Important:** The event is not fired when the value of the widget is changed programmatically. If you need to handle changes made by API, wire the [cascade](/api/javascript/ui/dropdownlist#events-cascade) event.","args":["e.sender"]}]},{"name":"Methods","children":[{"name":"value","children":[{"name":"Example - set value of the widget"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String`"}]}],"parameters":[{"name":"value `String`","description":"The value to set."}],"description":"Gets or sets the value of the DropDownList. The value will not be set if there is no item with such value. If value is undefined, text of the data item is used.> **Important:** If the widget is not bound (e.g. `autoBind` is set to `false`), the `value` method will pre-fetch the data before continuing with the value setting.**This does not apply when MVVM binding is used.**> **Important:** The widget will **clear the applied filter** if a new value is set. Thus it ensures that the original/whole data set is available for selection.> **Important:** This method **does not trigger** [change](#events-change) event.This could affect [MVVM value binding](/framework/mvvm/bindings/value). The model bound to the widget will not be updated.You can overcome this behavior trigerring the `change` event manually using [trigger(\"change\")](/api/javascript/observable#methods-trigger) method.    <input id=\"dropdownlist\" />    <script>    $(\"#dropdownlist\").kendoDropDownList({      dataSource: [ \"Apples\", \"Oranges\" ]    });    var dropdownlist = $(\"#dropdownlist\").data(\"kendoDropDownList\");    dropdownlist.value(\"Apples\");    dropdownlist.trigger(\"change\");    </script>"},{"name":"toggle","children":[{"name":"Example - set text of the widget"},{"name":"Parameters","children":[{"name":"toggle `Boolean`"}]}],"parameters":[{"name":"toggle `Boolean`","description":"Defines the whether to open/close the drop-down list."}],"description":"Opens or closes the widget popup."},{"name":"text","children":[{"name":"Example - set text of the widget"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"text `String`"}]}],"parameters":[{"name":"text `String`","description":"The text to set."}],"description":"Gets or sets the text of the DropDownList."},{"name":"setDataSource","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"dataSource `kendo.data.DataSource`"}]}],"parameters":[{"name":"dataSource `kendo.data.DataSource`"}],"description":"Sets the dataSource of an existing DropDownList and rebinds it."},{"name":"select","children":[{"name":"Example - get selected index of the widget"},{"name":"Example - select item based on function predicate"},{"name":"Example - select item based on index"},{"name":"Example - select item based on jQuery object"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"li `jQuery | Number | Function`"}]}],"parameters":[{"name":"li `jQuery | Number | Function`","description":"A string, DOM element or jQuery object which represents the item to be selected. A string is treated as a jQuery selector.A number representing the index of the item or function predicate which returns the correct data item."}],"description":"Gets or sets the selected item. Selects the item provided as an argument and updates the value and text of the widget.> **Important:** When **virtualization** is enabled, the method **does not support** selection with a *function predicate*. The predicate function looks onlyin the current datasource view, which represents only the active range/page. Hence it will not work properly.> **Important:** This method **does not trigger** [change](#events-change) event.This could affect [MVVM value binding](/framework/mvvm/bindings/value). The model bound to the widget will not be updated.You can overcome this behavior trigerring the `change` event manually using [trigger(\"change\")](/api/javascript/observable#methods-trigger) method.    <input id=\"dropdownlist\" />    <script>    $(\"#dropdownlist\").kendoDropDownList({      dataSource: [ \"Apples\", \"Oranges\" ]    });    var dropdownlist = $(\"#dropdownlist\").data(\"kendoDropDownList\");    dropdownlist.select(1);    dropdownlist.trigger(\"change\");    </script>"},{"name":"search","children":[{"name":"Example - search the widget"},{"name":"Parameters","children":[{"name":"word `String`"}]}],"parameters":[{"name":"word `String`","description":"The search value."}],"description":"Selects an item, which starts with the provided value."},{"name":"refresh","children":[{"name":"Example - refresh the popup items"}],"parameters":[],"description":"Refresh the popup by rendering all items again."},{"name":"readonly","children":[{"name":"Parameters","children":[{"name":"readonly `Boolean`"}]},{"name":"Example"}],"parameters":[{"name":"readonly `Boolean`","description":"The argument, which defines whether the DropDownList should be readonly or editable."}],"description":"Controls whether the widget is editable or readonly."},{"name":"open","children":[{"name":"Example"}],"parameters":[],"description":"Opens the popup."},{"name":"enable","children":[{"name":"Example - enable the widget"},{"name":"Parameters","children":[{"name":"enable `Boolean`"}]}],"parameters":[{"name":"enable `Boolean`","description":"If set to `true` the widget will be enabled. If set to `false` the widget will be disabled."}],"description":"Enables or disables the widget."},{"name":"items","children":[{"name":"Returns"}],"parameters":[],"description":"Obtains an Array of the DOM elements, which correspond to the data items from the Kendo UI DataSource [view](/api/javascript/data/datasource#methods-view)."},{"name":"focus","children":[{"name":"Example - focus the widget"}],"parameters":[],"description":"Focuses the widget."},{"name":"destroy","children":[{"name":"Example"}],"parameters":[],"description":"Prepares the **DropDownList** for safe removal from DOM. Detaches all event handlers and removes jQuery.data attributes to avoid memory leaks. Calls destroy method of any child Kendo widgets.> **Important:** This method does not remove the DropDownList element from DOM."},{"name":"dataItem","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"index `jQuery|Number` *(optional)*"}]}],"parameters":[{"name":"index `jQuery|Number` *(optional)*","description":"The zero-based index of the data record."}],"description":"Returns the data item at the specified index. If the index is not specified, the selected index will be used."},{"name":"close","children":[{"name":"Example - close the suggestion popup"}],"parameters":[],"description":"Closes the widget popup."}]},{"name":"Fields","children":[{"name":"ul `jQuery`","children":[{"name":"Example - get ul element"}]},{"name":"list `jQuery`","children":[{"name":"Example - get list element"}]},{"name":"options `Object`","children":[{"name":"Example - get options of the widget"}]},{"name":"filterInput `jQuery`","children":[{"name":"Example - get input element"}]},{"name":"span `jQuery`","children":[{"name":"Example - modify span element"}]},{"name":"dataSource `kendo.data.DataSource`","children":[{"name":"Example - add a data item to the data source"}]}]},{"name":"Configuration","children":[{"name":"virtual.valueMapper","type":"Function","default":" null","description":"The `valueMapper` function is **mandatory** for the functionality of the virtualized widget.The widget calls the `valueMapper` function when the widget receives a value, that is not fetched from the remote server yet.The widget will pass the selected value(s) in the `valueMapper` function. In turn, the valueMapper implementation should return the **respective data item(s) index/indices**.    <input id=\"orders\" style=\"width: 400px\" />    <script>        $(document).ready(function() {            $(\"#orders\").kendoDropDownList({                template: '<span class=\"order-id\">#= OrderID #</span> #= ShipName #, #= ShipCountry #',                dataTextField: \"ShipName\",                dataValueField: \"OrderID\",                filter: \"contains\",                virtual: {                    itemHeight: 26,                    valueMapper: function(options) {                        $.ajax({                            url: \"http://demos.telerik.com/kendo-ui/service/Orders/ValueMapper\",                            type: \"GET\",                            data: convertValues(options.value),                            success: function (data) {                                //the **data** is either index or array of indices.                                //Example:                                // 10258 -> 10 (index in the Orders collection)                                // [10258, 10261] -> [10, 14] (indices in the Orders collection)                                options.success(data);                            }                        })                    }                },                height: 520,                dataSource: {                    type: \"odata\",                    transport: {                        read: \"http://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders\"                    },                    schema: {                        model: {                            fields: {                                OrderID: { type: \"number\" },                                Freight: { type: \"number\" },                                ShipName: { type: \"string\" },                                OrderDate: { type: \"date\" },                                ShipCity: { type: \"string\" }                            }                        }                    },                    pageSize: 80,                    serverPaging: true,                    serverFiltering: true                }            });        });        function convertValues(value) {            var data = {};            value = $.isArray(value) ? value : [value];            for (var idx = 0; idx < value.length; idx++) {                data[\"values[\" + idx + \"]\"] = value[idx];            }            return data;        }    </script>"},{"name":"virtual.itemHeight","type":"Number","default":" null","description":"Specifies the height of the virtual item. All items in the virtualized list **must** have the same height.If the developer does not specify one, the framework will automatically set `itemHeight` based on the current theme and font size.    <input id=\"orders\" style=\"width: 400px\" />    <script>        $(document).ready(function() {            $(\"#orders\").kendoDropDownList({                template: '<span class=\"order-id\">#= OrderID #</span> #= ShipName #, #= ShipCountry #',                dataTextField: \"ShipName\",                dataValueField: \"OrderID\",                filter: \"contains\",                virtual: {                    itemHeight: 26,                    valueMapper: function(options) {                        $.ajax({                            url: \"http://demos.telerik.com/kendo-ui/service/Orders/ValueMapper\",                            type: \"GET\",                            data: convertValues(options.value),                            success: function (data) {                                options.success(data);                            }                        })                    }                },                height: 520,                dataSource: {                    type: \"odata\",                    transport: {                        read: \"http://demos.telerik.com/kendo-ui/service/Northwind.svc/Orders\"                    },                    schema: {                        model: {                            fields: {                                OrderID: { type: \"number\" },                                Freight: { type: \"number\" },                                ShipName: { type: \"string\" },                                OrderDate: { type: \"date\" },                                ShipCity: { type: \"string\" }                            }                        }                    },                    pageSize: 80,                    serverPaging: true,                    serverFiltering: true                }            });        });        function convertValues(value) {            var data = {};            value = $.isArray(value) ? value : [value];            for (var idx = 0; idx < value.length; idx++) {                data[\"values[\" + idx + \"]\"] = value[idx];            }            return data;        }    </script>"},{"name":"virtual","children":[{"name":"Example - DropDownList widget with declarative virtualization config"},{"name":"Example - DropDownList with virtualized list"}],"type":["Boolean","Object"],"default":" false","description":"Enables the virtualization feature of the widget."},{"name":"valuePrimitive","children":[{"name":"Example - specify that the View-Model field should be updated with the selected item value"}],"type":"Boolean","default":" false","description":"Specifies the [value binding](/framework/mvvm/bindings/value) behavior for the widget when the initial model value is null. If set to true, the View-Model field will be updated with the selected item value field. If set to false, the View-Model field will be updated with the selected item."},{"name":"value","children":[{"name":"Example - specify value of the widget"}],"type":"String","default":" \"\"","description":"The value of the widget."},{"name":"text","children":[{"name":"Example - specify text of the widget"}],"type":"String","default":" \"\"","description":"The text of the widget used when the `autoBind` is set to `false`."},{"name":"valueTemplate","children":[{"name":"Example - specify template as a string"},{"name":"Example - specify valueTemplate as a function"}],"type":["String","Function"],"description":"The [valueTemplate](/api/javascript/kendo#methods-template) used to render the selected value. By default the widget displays only the text of the data item (configured via `dataTextField`)."},{"name":"template","children":[{"name":"Example - specify template as a string"},{"name":"Example - specify template as a function"}],"type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) used to render the items. By default the widget displays only the text of the data item (configured via `dataTextField`)."},{"name":"headerTemplate","children":[{"name":"Example - specify headerTemplate as a string"}],"type":["String","Function"],"description":"Specifies a static HTML content, which will be rendered as a header of the popup element.> **Important** The header content **should be wrapped** with a HTML tag if it contains more than one element. This is applicable also when header content is just a string/text.> **Important** Widget does not pass a model data to the header template. Use this option only with static HTML."},{"name":"optionLabelTemplate","type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) used to render the option label.> **Important:** Define the [optionLabel](/api/javascript/kendo#configuration-optionLabel) as **object** if complex template structure is used"},{"name":"optionLabel","children":[{"name":"Example - specify optionLabel as an object"},{"name":"Example - specify optionLabel as a string"}],"type":["String "," Object"],"default":" \"\"","description":" Define the text of the default empty item. If the value is an object, then the widget will use it as a valid data item. Note that the optionLabel will not be available if the widget is empty.> **Important:** If `optionLabel` is an object, it needs to have at least `dataValueField` and `dataTextField` properties. Otherwise, widget will show `undefined`.Note that the very same optionLabel object will be passed to the [valueTemplate](/api/javascript/ui/dropdownlist#configuration-valueTemplate). **You need to ensure that all required by the valueTemplate properties are presentin the optionLabel object**.> **Important:** Since Q1 2015 (2015.1.318), the option label is rendered as a separate header template. The benefits of this change are:- the widget's value will be empty string even when `dataValueField` and `dataTextField` options are equal or not defined- the widget will not throw an exception when a custom item template is used and `optionLabel` is string- option label has a separate template, that gives more freedom for customization> **Important:** [Not relevant after Q1 2015] Widget's value will be equal to the `optionLabel` if the `dataValueField` and `dataTextField` options are equal or not defined"},{"name":"popup.position","children":[{"name":"Example - append the popup to a specific element"}],"type":"String","description":"Specifies which point of the popup element to attach to the anchor's origin point. The value isspace separated \"y\" plus \"x\" position.The available \"y\" positions are:- \"bottom\"- \"center\"- \"top\"The available \"x\" positions are:- \"left\"- \"center\"- \"right\""},{"name":"popup.origin","children":[{"name":"Example - append the popup to a specific element"}],"type":"String","description":"Specifies how to position the popup element based on achor point. The value isspace separated \"y\" plus \"x\" position.The available \"y\" positions are:- \"bottom\"- \"center\"- \"top\"The available \"x\" positions are:- \"left\"- \"center\"- \"right\""},{"name":"popup.appendTo","children":[{"name":"Example - append the popup to a specific element"}],"type":"String","description":"Defines a jQuery selector that will be used to find a container element, where the popup will be appended to."},{"name":"popup","children":[{"name":"Example - append the popup to a specific element"}],"type":"Object","description":"The options that will be used for the popup initialization. For more details about the available optionsrefer to [Popup](/api/javascript/ui/popup) documentation."},{"name":"minLength","children":[{"name":"Example - set minLength"}],"type":"Number","default":" 1","description":"The minimum number of characters the user must type before a filter is performed. Set to higher value than `1` if the search could match a lot of items.> Widget will initiate a request when input value is cleared. If you would like to prevent this behavior please check the [filtering](#events-filtering) event for more details."},{"name":"index","children":[{"name":"Example - select second item"}],"type":"Number","default":" 0","description":"The index of the initially selected item. The index is `0` based."},{"name":"ignoreCase","children":[{"name":"Example - disable case-insensitive suggestions"}],"type":"Boolean","default":" true","description":"If set to `false` case-sensitive search will be performed to find suggestions. The widget performs case-insensitive searching by default."},{"name":"height","children":[{"name":"Example - set the height"}],"type":"Number","default":" 200","description":"The height of the suggestion popup in pixels. The default value is 200 pixels."},{"name":"groupTemplate","type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) used to render the groups. By default the widget displays only the value of the group.    <input id=\"customers\" style=\"width: 400px\" />    <script>        $(document).ready(function() {            $(\"#customers\").kendoDropDownList({                dataTextField: \"ContactName\",                dataValueField: \"CustomerID\",                groupTemplate: \"Group: #: data #\",                height: 400,                dataSource: {                    type: \"odata\",                    transport: {                        read: \"http://demos.telerik.com/kendo-ui/service/Northwind.svc/Customers\"                    },                    group: { field: \"Country\" }                }            });        });    </script>"},{"name":"fixedGroupTemplate","type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) used to render the fixed header group. By default the widget displays only the value of the current group.    <input id=\"customers\" style=\"width: 400px\" />    <script>        $(document).ready(function() {            $(\"#customers\").kendoDropDownList({                dataTextField: \"ContactName\",                dataValueField: \"CustomerID\",                fixedGroupTemplate: \"Fixed group: #: data #\",                height: 400,                dataSource: {                    type: \"odata\",                    transport: {                        read: \"http://demos.telerik.com/kendo-ui/service/Northwind.svc/Customers\"                    },                    group: { field: \"Country\" }                }            });        });    </script>"},{"name":"filter","children":[{"name":"Example - set the filter"}],"type":"String","default":" \"none\"","description":"The filtering method used to determine the suggestions for the current value. Filtration is turned off by default.The supported filter values are `startswith`, `endswith` and `contains`."},{"name":"enable","children":[{"name":"Example - disable the widget"}],"type":"Boolean","default":" true","description":"If set to `false` the widget will be disabled and will not allow user input. The widget is enabled by default and allows user input."},{"name":"delay","children":[{"name":"Example - set the delay"}],"type":"Number","default":" 500","description":" Specifies the delay in milliseconds before the search-text typed by the end user is cleared."},{"name":"dataValueField","children":[{"name":"Example - set the dataValueField"}],"type":"String","default":" \"\"","description":"The field of the data item that provides the value of the widget.> **Important** When `dataValueField` is defined, the`dataTextField` option also should be set."},{"name":"dataTextField","children":[{"name":"Example - set the dataTextField"}],"type":"String","default":" \"\"","description":"The field of the data item that provides the text content of the list items. The widget will filter the data source based on this field.> **Important** When `dataTextField` is defined, the`dataValueField` option also should be set."},{"name":"dataSource","children":[{"name":"Example - set dataSource as an existing kendo.data.DataSource instance"},{"name":"Example - set dataSource as a JavaScript array"},{"name":"Example - set dataSource as a JavaScript object"}],"type":["Object","Array","kendo.data.DataSource"],"description":"The data source of the widget which is used to display a list of values. Can be a JavaScript object which represents a valid data source configuration, a JavaScript array or an existing [kendo.data.DataSource](/api/javascript/data/datasource)instance.If the `dataSource` option is set to a JavaScript object or array the widget will initialize a new [kendo.data.DataSource](/api/javascript/data/datasource) instance using that value as data source configuration.If the `dataSource` option is an existing [kendo.data.DataSource](/api/javascript/data/datasource) instance the widget will use that instance and will **not** initialize a new one."},{"name":"cascadeFromField","children":[{"name":"Example"}],"type":"String","description":"Defines the field to be used to filter the data source. If not defined the [parent's dataValueField option will be used](/api/javascript/ui/dropdownlist#configuration-dataValueField).[Help topic showing how cascading functionality works](/web/dropdownlist/cascading)"},{"name":"cascadeFrom","children":[{"name":"Example"}],"type":"String","description":"Use it to set the Id of the parent DropDownList widget.[Help topic showing how cascading functionality works](/web/dropdownlist/cascading)"},{"name":"autoBind","children":[{"name":"Example"}],"type":"Boolean","default":" true","description":"Controls whether to bind the widget to the data source on initialization."},{"name":"animation.open.duration","type":"Number","default":" 200","description":"The duration of the open animation in milliseconds."},{"name":"animation.open.effects","type":"String","description":"The effect(s) to use when playing the open animation. Multiple effects should be separated with a space.[Complete list of available animations](/api/javascript/effects/common)"},{"name":"animation.open","children":[{"name":"Example - configure the open animation"}],"type":"Object","description":"The animation played when the suggestion popup is opened."},{"name":"animation.close.duration","type":"Number","default":" 100","description":"The duration of the close animation in milliseconds."},{"name":"animation.close.effects","type":"String","description":"The effect(s) to use when playing the close animation. Multiple effects should be separated with a space.[Complete list of available animations](/api/javascript/effects/common)"},{"name":"animation.close","children":[{"name":"Example - configure the close animation"}],"type":"Object"},{"name":"animation","children":[{"name":"Example - configure the animation"},{"name":"Example - disable open and close animations"}],"type":"Object","description":"Configures the opening and closing animations of the suggestion popup. Setting the `animation` option to `false` will disable the opening and closing animations. As a result the suggestion popup will open and close instantly."}]}]}