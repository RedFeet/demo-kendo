{"name":"kendo.ui.TreeList","children":[{"name":"Events","children":[{"name":"columnUnlock","children":[{"name":"Example - subscribe to the \"columnUnlock\" event after initialization"},{"name":"Example - subscribe to the \"columnUnlock\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.Grid`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user unlock a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.column"]},{"name":"columnLock","children":[{"name":"Example - subscribe to the \"columnLock\" event after initialization"},{"name":"Example - subscribe to the \"columnLock\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.Grid`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user lock a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.column"]},{"name":"columnMenuInit","children":[{"name":"Example - subscribe to the \"columnMenuInit\" event after initialization"},{"name":"Example - subscribe to the \"columnMenuInit\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.field `String`"},{"name":"e.container `jQuery`"}]}],"description":"Fired when the column menu is initialized.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.field","e.container"]},{"name":"columnResize","children":[{"name":"Example - subscribe to the \"columnResize\" event after initialization"},{"name":"Example - subscribe to the \"columnResize\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.oldWidth `Number`"},{"name":"e.newWidth `Number`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user resizes a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.oldWidth","e.newWidth","e.column"]},{"name":"columnReorder","children":[{"name":"Example - subscribe to the \"columnReorder\" event after initialization"},{"name":"Example - subscribe to the \"columnReorder\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.oldIndex `Number`"},{"name":"e.newIndex `Number`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user changes the order of a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.oldIndex","e.newIndex","e.column"]},{"name":"columnHide","children":[{"name":"Example - subscribe to the \"columnHide\" event after initialization"},{"name":"Example - subscribe to the \"columnHide\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user hides a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.column"]},{"name":"columnShow","children":[{"name":"Example - subscribe to the \"columnShow\" event after initialization"},{"name":"Example - subscribe to the \"columnShow\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.column `Object`"}]}],"description":"Fired when the user shows a column.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.column"]},{"name":"save","children":[{"name":"Example - subscribe to the \"save\" event after initialization"},{"name":"Example - subscribe to the \"save\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.container `jQuery`"},{"name":"e.model `kendo.data.TreeListModel`"}]}],"description":"Fired when a data item is saved.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.container","e.model"]},{"name":"remove","children":[{"name":"Example - subscribe to the \"remove\" event after initialization"},{"name":"Example - subscribe to the \"remove\" event before initialization"},{"name":"Event Data","children":[{"name":"e.preventDefault `Function`"},{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.row `jQuery`"},{"name":"e.model `kendo.data.TreeListModel`"}]}],"description":"Fired when the user clicks the \"destroy\" command button.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.preventDefault","e.sender","e.row","e.model"]},{"name":"pdfExport","children":[{"name":"Example - subscribe to the \"pdfExport\" event after initialization"},{"name":"Example - subscribe to the \"pdfExport\" event during initialization"},{"name":"Event Data","children":[{"name":"e.promise `Promise`"},{"name":"e.preventDefault `Function`"},{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when the user clicks the \"Export to PDF\" toolbar button.","args":["e.promise","e.preventDefault","e.sender"]},{"name":"filterMenuInit","children":[{"name":"Example - subscribe to the \"filterMenuInit\" event during initialization and change the default operators"},{"name":"Example - subscribe to the \"filterMenuInit\" event during initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.field `String`"},{"name":"e.container `jQuery`"}]}],"description":"Fired when the treelist filter menu is initialized.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.field","e.container"]},{"name":"expand","children":[{"name":"Example - subscribe to the \"expand\" event after initialization"},{"name":"Example - subscribe to the \"expand\" event before initialization"},{"name":"Event Data","children":[{"name":"e.preventDefault `Function`"},{"name":"e.model `kendo.data.TreeListModel`"},{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when an item is about to be expanded.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.preventDefault","e.model","e.sender"]},{"name":"excelExport","children":[{"name":"Example - subscribe to the \"excelExport\" event after initialization"},{"name":"Example - subscribe to the \"excelExport\" event during initialization"},{"name":"Event Data","children":[{"name":"e.preventDefault `Function`"},{"name":"e.workbook `Object`"},{"name":"e.data `Array`"},{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when the user clicks the \"Export to Excel\" toolbar button.","args":["e.preventDefault","e.workbook","e.data","e.sender"]},{"name":"edit","children":[{"name":"Example - subscribe to the \"edit\" event after initialization"},{"name":"Example - subscribe to the \"edit\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.model `kendo.data.TreeListModel`"},{"name":"e.container `jQuery`"}]}],"description":"Fired when the user edits or creates a data item.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.model","e.container"]},{"name":"drop","children":[{"name":"Example - subscribe to the \"drop\" event after initialization"},{"name":"Example - subscribe to the \"drop\" event before initialization"},{"name":"The difference between e.setValid(false) and e.preventDefault()"},{"name":"Event Data","children":[{"name":"e.setValid `Boolean`"},{"name":"e.valid `Boolean`"},{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.destination `kendo.data.TreeListModel`"},{"name":"e.source `kendo.data.TreeListModel`"}]}],"description":"Fired when the user drops an item. If prevented, the source row will not be moved.The event handler function context (available via the `this` keyword) will be set to the widget instance.Available in builds 2015.3.1014 and later.","args":["e.setValid","e.valid","e.sender","e.destination","e.source"]},{"name":"dragend","children":[{"name":"Example - subscribe to the \"dragend\" event after initialization"},{"name":"Example - subscribe to the \"dragend\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.destination `kendo.data.TreeListModel`"},{"name":"e.source `kendo.data.TreeListModel`"}]}],"description":"Fired when the user has finished dragging an item and the model has been updated.The event handler function context (available via the `this` keyword) will be set to the widget instance.Available in builds 2015.3.1014 and later.","args":["e.sender","e.destination","e.source"]},{"name":"drag","children":[{"name":"Example - subscribe to the \"drag\" event after initialization"},{"name":"Example - subscribe to the \"drag\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.target `jQuery`"},{"name":"e.source `kendo.data.TreeListModel`"}]}],"description":"Fired while the user drags and item. This event is triggered on every mouse move.The event handler function context (available via the `this` keyword) will be set to the widget instance.Available in builds 2015.3.1014 and later.","args":["e.sender","e.target","e.source"]},{"name":"dragstart","children":[{"name":"Example - subscribe to the \"dragstart\" event after initialization"},{"name":"Example - subscribe to the \"dragstart\" event before initialization"},{"name":"e.source `kendo.data.TreeListModel`"}],"description":"Fired when the user attempts to drag an item. If prevented, the item is not allowed to move.The event handler function context (available via the `this` keyword) will be set to the widget instance.Available in builds 2015.3.1014 and later."},{"name":"dataBound","children":[{"name":"Example - subscribe to the \"dataBound\" event after initialization"},{"name":"Example - subscribe to the \"dataBound\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when the widget is bound to data from its data source.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender"]},{"name":"dataBinding","children":[{"name":"Example - subscribe to the \"dataBinding\" event after initialization"},{"name":"Example - subscribe to the \"dataBinding\" event before initialization"},{"name":"Event Data","children":[{"name":"e.preventDefault `Function`"},{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired before the widget binds to its data source.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.preventDefault","e.sender"]},{"name":"collapse","children":[{"name":"Example - subscribe to the \"collapse\" event after initialization"},{"name":"Example - subscribe to the \"collapse\" event before initialization"},{"name":"Event Data","children":[{"name":"e.preventDefault `Function`"},{"name":"e.model `kendo.data.TreeListModel`"},{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when an item is about to be collapsed.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.preventDefault","e.model","e.sender"]},{"name":"change","children":[{"name":"Example - get the selected data item(s) when using cell selection"},{"name":"Example - get the selected data item(s) when using row selection"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"}]}],"description":"Fired when the user selects a table row or cell in the treelist.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender"]},{"name":"cancel","children":[{"name":"Example - subscribe to the \"cancel\" event after initialization"},{"name":"Example - subscribe to the \"cancel\" event before initialization"},{"name":"Event Data","children":[{"name":"e.sender `kendo.ui.TreeList`"},{"name":"e.preventDefault `Function`"},{"name":"e.model `kendo.data.TreeListModel`"},{"name":"e.container `jQuery`"}]}],"description":"Fired when the user clicks the \"cancel\" button (in inline or popup [editing mode](#configuration-editable.mode)) or closes the popup window.The event handler function context (available via the `this` keyword) will be set to the widget instance.","args":["e.sender","e.preventDefault","e.model","e.container"]}]},{"name":"Methods","children":[{"name":"reorderColumn","children":[{"name":"Example - move a column"},{"name":"Parameters","children":[{"name":"column `Object`"},{"name":"destIndex `Number`"}]}],"parameters":[{"name":"column `Object`","description":"The column whose position should be changed."},{"name":"destIndex `Number`","description":"The new position of the column. The destination index should be calculated with regard to all columns, including the hidden ones."}],"description":"Changes the position of the specified column."},{"name":"unlockColumn","children":[{"name":"Example - unlock a column"},{"name":"Parameters","children":[{"name":"column `Number|String`"}]}],"parameters":[{"name":"column `Number|String`","description":"The index of the column or the [field](#configuration-columns.field) to which the columns is bound.> In order to use this method, the treelist must be initialized with at least one locked column, and there should be locked columns left after the target column is unlocked."}],"description":"Unlocks (unfreezes) a column."},{"name":"lockColumn","children":[{"name":"Example - lock a column"},{"name":"Parameters","children":[{"name":"column `Number|String`"}]}],"parameters":[{"name":"column `Number|String`","description":"The index of the column or the [field](#configuration-columns.field) to which the columns is bound.> In order to use this method, the treelist must be initialized with at least one locked column, and should have unlocked columns left after the target column is locked."}],"description":"Locks (freezes) a column, allowing users to see it at all times when scrolling."},{"name":"hideColumn","children":[{"name":"Example - show a hidden column by field"},{"name":"Example - hide column by index"},{"name":"Parameters","children":[{"name":"column `Number|String`"}]}],"parameters":[{"name":"column `Number|String`","description":"The index of the column, or the [field](#configuration-columns.field) to which the columns is bound."}],"description":"Hides the specified column."},{"name":"showColumn","children":[{"name":"Example - show a hidden column by field"},{"name":"Example - show a hidden column by index"},{"name":"Parameters","children":[{"name":"column `Number|String`"}]}],"parameters":[{"name":"column `Number|String`","description":"The index of the column, or the [field](#configuration-columns.field) to which the columns is bound."}],"description":"Shows the specified column."},{"name":"setDataSource","children":[{"name":"Example - set the data source"},{"name":"Parameters","children":[{"name":"dataSource `kendo.data.TreeListDataSource`"}]}],"parameters":[{"name":"dataSource `kendo.data.TreeListDataSource`","description":"The data source to which the widget should be bound."}],"description":"Sets the data source of the widget."},{"name":"select","children":[{"name":"Example - get the selected table row"},{"name":"Example - select the first table cell"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"rows `Element|jQuery`"}]}],"parameters":[{"name":"rows `Element|jQuery`","description":"A string, DOM element or jQuery object which represents the table row(s) or cell(s). A string is treated as a jQuery selector."}],"description":"Gets or sets the table rows (or cells) which are selected."},{"name":"saveRow","children":[{"name":"Example - save row"}],"parameters":[],"description":"Switches the table row which is in edit mode and saves any changes made by the user.Fires the [edit](#events-save) event."},{"name":"saveAsPDF","children":[{"name":"Example - manually initiate PDF export"},{"name":"Returns"}],"parameters":[],"description":"Initiates the PDF export and returns a promise. Also triggers the [pdfExport](#events-pdfExport) event.> Calling this method may trip the built-in browser pop-up blocker. To avoid that, call this method as a response to an end-user action, e.g. a button click."},{"name":"saveAsExcel","children":[{"name":"Example - manually initiate Excel export"}],"parameters":[],"description":"Initiates the Excel export. Also fires the [`excelExport`](#events-excelExport) event.> Calling this method could trigger the browser built-in popup blocker in some cases. To avoid that, always call it as a response to an end-user action e.g. button click."},{"name":"removeRow","children":[{"name":"Example - remove the first table row"},{"name":"Parameters","children":[{"name":"row `String|Element|jQuery`"}]}],"parameters":[{"name":"row `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the table row. A string is treated as a jQuery selector."}],"description":"Removes the specified table row from the treelist. Also removes the corresponding data item from the data source.Fires the [remove](#events-remove) event."},{"name":"refresh","children":[{"name":"Example - refresh the widget"}],"parameters":[],"description":"Renders all table rows using the current data items."},{"name":"items","children":[{"name":"Returns"}],"parameters":[],"description":"Obtains an Array of the DOM elements, which correspond to the data items from the Kendo UI DataSource [view](/api/javascript/data/datasource#methods-view)."},{"name":"itemFor","children":[{"name":"Example - get row from model"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"model `kendo.data.TreeListModel|Object`"}]}],"parameters":[{"name":"model `kendo.data.TreeListModel|Object`","description":"A model from the DataSource, or the id of a model in the DataSource."}],"description":"Returns the rendered HTML element for a given model.> This method is available with versions released after the official Q3 release - 2015.3.930."},{"name":"expand","children":[{"name":"Example - expand row of a data item with a given id"},{"name":"Example"}],"parameters":[],"description":"This method expands the row."},{"name":"editRow","children":[{"name":"Example - switch the first row to edit mode"},{"name":"Parameters","children":[{"name":"row `jQuery`"}]}],"parameters":[{"name":"row `jQuery`","description":"The jQuery object which represents the table row."}],"description":"Switches the specified table row to edit mode.Fires the [edit](#events-edit) event."},{"name":"destroy","children":[{"name":"Example"}],"parameters":[],"description":"Prepares the widget for safe removal from DOM. Detaches all event handlers and removes jQuery.data attributes to avoid memory leaks. Calls the `destroy` method of any child Kendo widgets.> This method does not remove the widget element from DOM."},{"name":"dataItem","children":[{"name":"Example - get the data item to which the first table row is bound"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"row `String|Element|jQuery`"}]}],"parameters":[{"name":"row `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the table row. A string is treated as a jQuery selector."}],"description":"Returns the data item to which the specified table row is bound."},{"name":"collapse","children":[{"name":"Example"}],"parameters":[],"description":"This method collapse the row."},{"name":"clearSelection","children":[{"name":"Example - clear selection"}],"parameters":[],"description":"Clears the currently selected table rows or cells (depending on the current selection [mode](#configuration-selectable))."},{"name":"cancelRow","children":[{"name":"Example - cancel editing"}],"parameters":[],"description":"Cancels editing for the table row which is in edit mode. Reverts any changes made."},{"name":"addRow","children":[{"name":"Example - add a new child data item"},{"name":"Example - add a new root data item"},{"name":"Parameters","children":[{"name":"parentRow `String|Element|jQuery`"}]}],"parameters":[{"name":"parentRow `String|Element|jQuery`","description":"A string, DOM element or jQuery object which represents the parent table row. A string is treated as a jQuery selector."}],"description":"Adds an empty data item to the treelist. In \"inline\" editing mode a table row will be appended. A popup window will be displayed in \"popup\" editing mode.Fires the [edit](#events-edit) event."}]},{"name":"Configuration","children":[{"name":"toolbar.text","type":"String","description":"The text displayed by the command button. If not set the [name](#configuration-toolbar.name)` option would be used as the button text instead.    <div id=\"treeList\"></div>    <script>        $(\"#treeList\").kendoTreeList({          toolbar: [            { name: \"create\", text: \"Add new\" }          ],          columns: [            { field: \"name\" },            { field: \"age\" }          ],          dataSource: [              { name: \"Jane Doe\", age: 30 },              { name: \"John Doe\", age: 33 }          ]        });    </script>"},{"name":"toolbar.name","children":[{"name":"Example - specify the name of the command"}],"type":"String","description":"The name of the toolbar command. Either a built-in (\"create\", \"excel\", \"pdf\") or custom. The `name` is reflected in one of the CSS classes, which is applied to the button - `k-grid-name`.This class can be used to get a reference to the button (after TreeList initialization) and attach click handlers."},{"name":"toolbar","children":[{"name":"Example - configure the TreeList Toolbar as an array of commands"},{"name":"Example - configure the TreeList Toolbar template with a function"},{"name":"Example - configure the TreeList Toolbar as a string template"}],"type":["String","Function","Array"],"description":"If a `String` value is assigned to the `toolbar` configuration option, it will be treated as a single string template for the whole treelist Toolbar,and the string value will be passed as an argument to a [`kendo.template()`](/api/javascript/kendo#methods-template) function.If a `Function` value is assigned (it may be a `kendo.template()` function call or a generic function reference), then the return value of the function will be used to render the treelist Toolbar contents.If an `Array` value is assigned, it will be treated as the list of commands displayed in the treelist Toolbar. Commands can be custom or built-in (\"create\", \"excel\", \"pdf\").* The \"create\" command adds an empty data item to the treelist.* The \"excel\" command exports the treelist data in MS Excel format.* The \"pdf\" command exports the treelist data in PDF format."},{"name":"sortable.mode","children":[{"name":"Example - allow multiple column sorting"}],"type":"String","default":" \"single\"","description":"The sorting mode. If set to \"single\" the user can sort by one column. If set to \"multiple\" the user can sort by multiple columns."},{"name":"sortable.allowUnsort","children":[{"name":"Example - do not allow unsorting"}],"type":"Boolean","default":" true","description":"If set to `true` the user can get the treelist in its unsorted state by clicking the sorted column header."},{"name":"sortable","children":[{"name":"Example - enable sorting"}],"type":["Boolean","Object"],"default":" false","description":"If set to `true` the user could sort the treelist by clicking the column header cells. By default sorting is disabled.Can be set to a JavaScript object which represents the sorting configuration."},{"name":"selectable","children":[{"name":"Example - set selectable as a string"},{"name":"Example - set selectable as a boolean"}],"type":["Boolean","String"],"default":" false","description":"If set to `true` the user would be able to select treelist rows. By default selection is disabled.Can also be set to the following string values:- \"row\" - the user can select a single row.- \"cell\" - the user can select a single cell.- \"multiple, row\" - the user can select multiple rows.- \"multiple, cell\" - the user can select multiple cells."},{"name":"scrollable","children":[{"name":"Example - disable scrolling"}],"type":["Boolean","Object"],"default":" true","description":"If set to `true` the TreeList will display a scrollbar when the total row height (or width) exceeds the TreeList height (or width). By default scrolling is enabled.Scrolling renders separate tables for the header and data area. For accessibility-conscious applications, disable scrolling."},{"name":"pdf.title","children":[{"name":"Example - set the title"}],"type":"String","default":" null","description":"Sets the title of the PDF file."},{"name":"pdf.subject","children":[{"name":"Example - set the subject"}],"type":"String","default":" null","description":"Sets the subject of the PDF file."},{"name":"pdf.proxyTarget","children":[{"name":"Example - open the generated document in a new window"}],"type":"String","default":" \"_self\"","description":"A name or keyword indicating where to display the document returned from the proxy.If you want to display the document in a new window or iframe,the proxy should set the \"Content-Disposition\" header to `inline; filename=\"<fileName.pdf>\"`."},{"name":"pdf.proxyURL","children":[{"name":"Example - set the server proxy URL"}],"type":"String","default":" null","description":"The URL of the server side proxy which will stream the file to the end user.A proxy will be used when the browser isn't capable of saving files locally.Such browsers are IE version 9 and lower, and Safari.The developer is responsible for implementing the server-side proxy.The proxy will receive a POST request with the following parameters in the request body:* contentType: The MIME type of the file* base64: The base-64 encoded file content* fileName: The file name, as requested by the caller.The proxy should return the decoded file with the \"Content-Disposition\" header set to`attachment; filename=\"<fileName.pdf>\"`."},{"name":"pdf.paperSize","children":[{"name":"Example - set custom paper size"}],"type":["String","Array"],"default":" \"auto\"","description":"Specifies the paper size of the PDF document.The default \"auto\" means the paper size is determined by the content.> The size of the content in pixels will match the size of the output in points (1 pixel = 1/72 inch).Supported values:* A predefined size: \"A4\", \"A3\" etc.* An array of two numbers specifying the width and height in points (1pt = 1/72in)* An array of two strings specifying the width and height in units.  Supported units are \"mm\", \"cm\", \"in\" and \"pt\"."},{"name":"pdf.margin.top","type":["Number","String"],"default":" 0","description":"The top margin. Numbers are considered as \"pt\" units."},{"name":"pdf.margin.right","type":["Number","String"],"default":" 0","description":"The right margin. Numbers are considered as \"pt\" units."},{"name":"pdf.margin.left","type":["Number","String"],"default":" 0","description":"The left margin. Numbers are considered as \"pt\" units."},{"name":"pdf.margin.bottom","type":["Number","String"],"default":" 0","description":"The bottom margin. Numbers are considered as \"pt\" units."},{"name":"pdf.margin","children":[{"name":"Example - set the margins"}],"type":"Object","description":"Specifies the margins of the page (numbers or strings with units). Supportedunits are \"mm\", \"cm\", \"in\" and \"pt\" (default)."},{"name":"pdf.landscape","children":[{"name":"Example - enable landscape mode"}],"type":"Boolean","default":" false","description":"Set to `true` to reverse the paper dimensions such that width is the larger edge."},{"name":"pdf.keywords","children":[{"name":"Example - set the keywords"}],"type":"String","default":" null","description":"Specifies the keywords of the exported PDF file."},{"name":"pdf.forceProxy","type":"Boolean","default":" false","description":"If set to true, the content will be forwarded to [proxyURL](#configuration-pdf.proxyURL) even if the browser supports saving files locally."},{"name":"pdf.fileName","children":[{"name":"Example - set the default PDF file name"}],"type":"String","default":" \"Export.pdf\"","description":"Specifies the file name of the exported PDF file."},{"name":"pdf.date","children":[{"name":"Example - set the date"}],"type":"Date","description":"The date when the PDF document is created. Defaults to `new Date()`."},{"name":"pdf.creator","children":[{"name":"Example - set the creator"}],"type":"String","default":" \"Kendo UI PDF Generator\"","description":"The creator of the PDF document."},{"name":"pdf.avoidLinks","type":["Boolean","String"],"default":" false","description":"A flag indicating whether to produce actual hyperlinks in the exported PDF file.It's also possible to pass a CSS selector as argument. All matching links will be ignored.> Available in versions 2015.3.1020 and later"},{"name":"pdf.author","children":[{"name":"Example - set the author"}],"type":"String","default":" null","description":"The author of the PDF document."},{"name":"pdf","type":"Object","description":"Configures the Kendo UI TreeList PDF export settings."},{"name":"messages.retry","children":[{"name":"Example"}],"type":"String","default":" \"Retry\"","description":"Defines the text of \"Retry\" message assigned to the button that tries to load root-level items again."},{"name":"messages.requestFailed","children":[{"name":"Example"}],"type":"String","default":" \"Request failed.\"","description":"Defines the text of \"Request failed.\" message when the widget fails to load its root-level items."},{"name":"messages.noRows","children":[{"name":"Example"}],"type":"String","default":" \"No records to display\"","description":"Defines the text of \"No records to display\" message when the widget does not show any items."},{"name":"messages.loading","children":[{"name":"Example"}],"type":"String","default":" \"Loading...\"","description":"Defines the text of the \"Loading...\" message when the widget loads its root-level items."},{"name":"messages.commands.update","children":[{"name":"Example"}],"type":"String","default":" \"Update\"","description":"Defines the text of the \"Update\" button that applies the changes during editing."},{"name":"messages.commands.pdf","children":[{"name":"Example"}],"type":"String","default":" \"Export to PDF\"","description":"Defines the text of the \"Export to PDF\" button that exports the widget data in PDF format."},{"name":"messages.commands.excel","children":[{"name":"Example"}],"type":"String","default":" \"Export to Excel\"","description":"Defines the text of the \"Export to Excel\" button that exports the widget data in spreadsheet format."},{"name":"messages.commands.edit","children":[{"name":"Example"}],"type":"String","default":" \"Edit\"","description":"Defines the text of the \"Edit\" button that shows the editable fields for the row."},{"name":"messages.commands.destroy","children":[{"name":"Example"}],"type":"String","default":" \"Delete\"","description":"Defines the text of the \"Delete\" button that deletes a data row."},{"name":"messages.commands.createchild","children":[{"name":"Example"}],"type":"String","default":" \"Add child record\"","description":"Defines the text of the \"Add child record\" button that adds new child data rows."},{"name":"messages.commands.create","children":[{"name":"Example"}],"type":"String","default":" \"Add new record\"","description":"Defines the text of the \"Add new record\" button that adds new data rows."},{"name":"messages.commands.canceledit","children":[{"name":"Example"}],"type":"String","default":" \"Cancel\"","description":"Defines the text of the \"Cancel\" button that discards the changes during editing."},{"name":"messages.commands","children":[{"name":"Example"}],"type":"Object","description":"Defines the text for the command buttons used across the widget."},{"name":"messages","children":[{"name":"Example - change the messages"}],"type":"Object","description":"Defines the text of the command buttons that are shown within the TreeList. Used primarily for localization."},{"name":"height","children":[{"name":"Example - set the height as a string"},{"name":"Example - set the height as a number"}],"type":["Number","String"],"description":"The height of the treelist. Numeric values are treated as pixels."},{"name":"filterable.messages.operator","children":[{"name":"Example - set the text of operator item"}],"type":"String","default":" \"Operator\"","description":"The text of the operator item in filter menu (available in mobile mode only)."},{"name":"filterable.messages.cancel","children":[{"name":"Example - set the cancel button text"}],"type":"String","default":" \"Cancel\"","description":"The text of the cancel button in the filter menu header (available in mobile mode only)."},{"name":"filterable.messages.selectValue","children":[{"name":"Example - set the \"selectValue\" message"}],"type":"String","default":" \"-Select value-\"","description":"The text of the DropDownList displayed in the filter menu for columns whose [values](#configuration-columns.values) option is set."},{"name":"filterable.messages.or","children":[{"name":"Example - set the \"or\" message"}],"type":"String","default":" \"Or\"","description":"The text of the option which represents the \"or\" logical operation."},{"name":"filterable.messages.isTrue","children":[{"name":"Example - set the \"isTrue\" message"}],"type":"String","default":" \"is true\"","description":"The text of the radio button for `true` values. Displayed when filtering `Boolean` fields."},{"name":"filterable.messages.isFalse","children":[{"name":"Example - set the \"isFalse\" message"}],"type":"String","default":" \"is false\"","description":"The text of the radio button for `false` values. Displayed when filtering `Boolean` fields."},{"name":"filterable.messages.info","children":[{"name":"Example - set the \"info\" message"}],"type":"String","default":" \"Show items with value that: \"","description":"The text of the information message on the top of the filter menu."},{"name":"filterable.messages.filter","children":[{"name":"Example - set the \"filter\" message"}],"type":"String","default":" \"Filter\"","description":"The text of the button which applies the filter."},{"name":"filterable.messages.clear","children":[{"name":"Example - set the \"clear\" message"}],"type":"String","default":" \"Clear\"","description":"The text of the button which clears the filter."},{"name":"filterable.messages.and","children":[{"name":"Example - set the \"and\" message"}],"type":"String","default":" \"And\"","description":"The text of the option which represents the \"and\" logical operation."},{"name":"filterable.messages","children":[{"name":"Example - customize filter menu messages"}],"type":"Object","description":"The text messages displayed in the filter menu. Use it to customize or localize the filter menu messages."},{"name":"filterable.extra","children":[{"name":"Example - disable the extra filtering criteria"}],"type":"Boolean","default":" true","description":"If set to `true` the filter menu allows the user to input a second criteria."},{"name":"filterable","children":[{"name":"Example - enable and configure filtering"}],"type":["Boolean","Object"],"default":" false","description":"If set to `true` the user can filter the data source using the treelist filter menu. Filtering is disabled by default.Can be set to a JavaScript object which represents the filter menu configuration.> All other [`filterable` options from Grid](/api/javascript/ui/grid#configuration-filterable) can be used, except for `filterable.mode`, which is always `menu`."},{"name":"excel.proxyURL","children":[{"name":"Example - set the server proxy URL"}],"type":"String","default":" null","description":"The URL of the server-side proxy which will stream the file to the end user.A proxy will be used when the browser isn't capable of saving files locally.Such browsers are IE version 9 and lower and Safari.The developer is responsible for implementing the server-side proxy.The proxy will receive a POST request with the following parameters in the request body:* contentType: The MIME type of the file* base64: The base-64 encoded file content* fileName: The file name, as requested by the caller.The proxy should return the decoded file with the \"Content-Disposition\" header set to`attachment; filename=\"<fileName.xslx>\"`."},{"name":"excel.forceProxy","type":"Boolean","default":" false","description":"If set to true, the content will be forwarded to [proxyURL](#configuration-excel.proxyURL) even if the browser supports saving files locally."},{"name":"excel.filterable","children":[{"name":"Example - enable filtering in the output Excel file"}],"type":"Boolean","default":" false","description":"Enables or disables column filtering in the Excel file. Not to be mistaken with the treelist filtering feature."},{"name":"excel.fileName","children":[{"name":"Example - set the default Excel file name"}],"type":"String","default":" \"Export.xslx\"","description":"Specifies the file name of the exported Excel file."},{"name":"excel","type":"Object","description":"Configures the Kendo UI TreeList Excel export settings."},{"name":"editable.window","children":[{"name":"Example - TreeList popup Window configuration"}],"type":"Object","description":"Configures the Kendo UI Window instance, which is used when the TreeList edit mode is \"popup\". The configuration is optional.For more information, please refer to the [Window configuration API](/api/javascript/ui/window)."},{"name":"editable.template","children":[{"name":"Example - using MVVM in the popup editor template"},{"name":"Example - customize the popup editor"}],"type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) which renders the popup editor.The template should contain elements whose `name` HTML attributes are set as the editable fields. This is how the treelist will knowwhich field to update. The other option is to use [MVVM](/framework/mvvm/overview) bindings in order to bind HTML elements to data item fields.> Use the `role` data attribute to initialize Kendo UI widgets in the template. Check [data attribute initialization](/framework/data-attribute-initialization) for more info."},{"name":"editable.move","children":[{"name":"Example - use drag&drop for editing row parent node"}],"type":"Boolean","default":" false","description":"Enables drag&drop UI of rows between parents."},{"name":"editable.mode","children":[{"name":"Example - specify inline editing mode"}],"type":"String","default":" \"inline\"","description":"The editing mode to use. The supported editing modes are \"inline\" and \"popup\".> The \"inline\" and \"popup\" editing modes are triggered by the \"edit\" column command. Thus it is required to have a column with an \"edit\" command."},{"name":"editable","children":[{"name":"Example - enable popup editing"},{"name":"Example - enable editing"}],"type":["Boolean","Object"],"default":" false","description":"If set to `true` the user would be able to edit the data to which the treelist is bound. By default editing is disabled.Can be set to a string (\"inline\" or \"popup\") to specify the editing mode. The default editing mode is \"inline\".Can be set to a JavaScript object which represents the editing configuration.> The \"inline\" and \"popup\" editing modes are triggered by the \"edit\" column command. Thus it is required to have a column with an \"edit\" command."},{"name":"dataSource","children":[{"name":"Example - set dataSource as an existing kendo.data.TreeListDataSource instance"},{"name":"Example - set dataSource as a JavaScript array"},{"name":"Example - set dataSource as a JavaScript object"}],"type":["Object","Array","kendo.data.TreeListDataSource"],"description":"The data source of the widget which is used to render table rows. Can be a JavaScript object which represents a valid data source configuration, a JavaScript array or an existing [kendo.data.DataSource](/api/javascript/data/datasource)instance.If the `dataSource` option is set to a JavaScript object or array the widget will initialize a new [kendo.data.DataSource](/api/javascript/data/datasource) instance using that value as data source configuration.If the `dataSource` option is an existing `kendo.data.DataSource` instance, the widget will use that instance and will **not** initialize a new one."},{"name":"columnMenu.messages.sortDescending","children":[{"name":"Example - set the sort descending message"}],"type":"String","default":" \"Sort Descending\"","description":"The text message displayed for the menu item which performs descending sort."},{"name":"columnMenu.messages.sortAscending","children":[{"name":"Example - set the sort ascending message"}],"type":"String","default":" \"Sort Ascending\"","description":"The text message displayed for the menu item which performs ascending sort."},{"name":"columnMenu.messages.filter","children":[{"name":"Example - set the filter message"}],"type":"String","default":" \"Filter\"","description":"The text message displayed for the filter menu item."},{"name":"columnMenu.messages.columns","children":[{"name":"Example - set the column selection message"}],"type":"String","default":" \"Columns\"","description":"The text message displayed for the column selection menu item."},{"name":"columnMenu.messages","children":[{"name":"Example - customize column menu messages"}],"type":"Object","description":"The text messages displayed in the column menu. Use it to customize or localize the column menu messages."},{"name":"columnMenu.sortable","children":[{"name":"Example - disable column menu sorting"}],"type":"Boolean","default":" true","description":"If set to `true` the column menu would allow the user to sort the treelist by the column field. By default the column menu allows the user to sort if sorting is enabled via the [sortable](#configuration-sortable) option.> If this option is set to `false` the user could still sort by clicking the column header cell."},{"name":"columnMenu.filterable","children":[{"name":"Example - disable column menu filtering"}],"type":"Boolean","default":" true","description":"If set to `true` the column menu would allow the user to filter the treelist. By default the column menu allows the user to filter if filtering is enabled via the [filterable](#configuration-filterable)."},{"name":"columnMenu.columns","children":[{"name":"Example - disable column selection"}],"type":"Boolean","default":" true","description":"If set to `true` the column menu would allow the user to select (show and hide) treelist columns. By default the column menu allows column selection."},{"name":"columnMenu","children":[{"name":"Example - enable the column menu"}],"type":["Boolean","Object"],"default":" false","description":"If set to `true` the treelist will display the column menu when the user clicks the chevron icon in the column headers. The column menu allows the user to show and hide columns, filter and sort (if filtering and sorting are enabled).By default the column menu is not enabled.Can be set to a JavaScript object which represents the column menu configuration."},{"name":"reorderable","children":[{"name":"Example - enable column reordering"}],"type":"Boolean","default":"false","description":"If set to `true` the user could reorder the columns by dragging their header cells. By default reordering is disabled."},{"name":"resizable","children":[{"name":"Example - enable column resizing"}],"type":"Boolean","default":" false","description":"If set to `true` allows users to resize columns by dragging their header borders. By default resizing is disabled."},{"name":"columns.lockable","children":[{"name":"Example - lockable columns"}],"type":"Boolean","default":" true","description":"If set to `false` the column will remain in the side of the treelist into which its own locked configuration placed it.> This option is meaningful when the treelist has columns which are configured with a [locked](#configuration-columns.locked) value. Setting it explicitly to `false` willprevent the user from locking or unlocking this column using the user interface."},{"name":"columns.locked","children":[{"name":"Example - locked columns"}],"type":"Boolean","default":" false","description":"If set to `true` the column will be displayed as locked in the treelist. Also see [Frozen Columns](/web/grid/walkthrough#frozen-columns-locked-columns)."},{"name":"columns.menu","children":[{"name":"Example - hide a column from the column menu"}],"type":"Boolean","description":"If set to `true` the column will be visible in the grid column menu. By default the column menu includes all data-bound columns (ones that have their [field](#configuration-columns.field) set)."},{"name":"columns.hidden","children":[{"name":"Example - hide columns"}],"type":"Boolean","default":" false","description":"If set to `true` the column will not be displayed in the treelist. By default all columns are displayed."},{"name":"columns.width","children":[{"name":"Example - set the column width as a number"},{"name":"Example - set the column width as a string"}],"type":["String","Number"],"description":"The width of the column. Numeric values are treated as pixels. **For more important information, please refer to [Column Widths](/web/grid/walkthrough#column-widths)**."},{"name":"columns.title","children":[{"name":"Example - set the title of the column"}],"type":"String","description":"The text that is displayed in the column header cell. If not set the [field](#configuration-columns.field) is used."},{"name":"columns.template","children":[{"name":"Example - external template with conditional formatting and button handler"},{"name":"Example - set the template as a string (wrap the column value in HTML)"}],"type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) which renders the column content. The treelist renders table rows (`<tr>`) which represent the data source items.Each table row consists of table cells (`<td>`) which represent the treelist columns. By default the HTML-encoded value of the [field](#configuration-columns.field) is displayed in the column.> Use the `template` to customize the way the column displays its value."},{"name":"columns.sortable.compare","children":[{"name":"Example - define custom compare function"}],"type":"Function","description":"A JavaScript function which is used to compare the values - should return -1 if first argument is less than second one, 0 if both are the same or +1 if the first one is greater than second one."},{"name":"columns.sortable","children":[{"name":"Example - disable sorting"}],"type":["Boolean","Object"],"default":" true","description":"If set to `true` the user can click the column header and sort the treelist by the column [field](#configuration-columns.field) when sorting is enabled. If set to `false` sorting willbe disabled for this column. By default all columns are sortable if sorting is enabled via the [sortable](#configuration-sortable) option."},{"name":"columns.minScreenWidth","children":[{"name":"Example - lockable columns"}],"type":"Number","description":"The pixel screen width below which the column will be hidden. The setting takes precedence over the [`hidden`](/api/javascript/ui/grid#configuration-columns.hidden) setting,so the two should not be used at the same time."},{"name":"columns.headerTemplate","children":[{"name":"Example - column header template as a string"}],"type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) which renders the column header content. By default the value of the [title](#configuration-columns.title) column optionis displayed in the column header cell.> If sorting is enabled, the column header content will be wrapped in an `<a>` element. As a result the template **must** contain only inline elements."},{"name":"columns.headerAttributes","children":[{"name":"Example - specify column header HTML attributes"}],"type":"Object","description":"HTML attributes of the table header cell (`<th>`) rendered for the column.> HTML attributes which are JavaScript keywords (e.g. *class*) must be quoted."},{"name":"columns.format","children":[{"name":"Example - specify the column format string"}],"type":"String","description":"The format that is applied to the value before it is displayed. Takes the form \"{0:format}\" where \"format\" is a [standard number format](/api/javascript/kendo#standard-number-formats),[custom number format](/api/javascript/kendo#custom-number-formats), [standard date format](/api/javascript/kendo#standard-date-formats) or a [custom date format](/api/javascript/kendo#custom-date-formats).> The [kendo.format](/api/javascript/kendo#methods-format) function is used to format the value."},{"name":"columns.footerTemplate","children":[{"name":"Example - specify column footer template"}],"type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) which renders the footer table cell for the column.The fields which can be used in the template are:* average - the value of the \"average\" aggregate (if specified)* count - the value of the \"count\" aggregate (if specified)* max - the value of the \"max\" aggregate (if specified)* min - the value of the \"min\" aggregate (if specified)* sum - the value of the \"sum\" aggregate (if specified)* data - provides access to all available aggregates, e.g. `data.fieldName1.sum` or `data.fieldName2.average`"},{"name":"columns.filterable.ui","children":[{"name":"Example - initialize the filter UI"},{"name":"Example - specify the filter UI as a string"}],"type":["String","Function"],"description":"The `role` [data attribute](/framework/data-attribute-initialization) of the widget used in the filter menu or a JavaScript function which initializes that widget."},{"name":"columns.filterable","children":[{"name":"Example - disable filtering"}],"type":["Boolean","Object"],"default":" true","description":"If set to `true` a filter menu will be displayed for this column when filtering is enabled. If set to `false` the filter menu will not be displayed. By default a filter menu is displayedfor all columns when filtering is enabled via the [filterable](#configuration-filterable) option.Can be set to a JavaScript object which represents the filter menu configuration."},{"name":"columns.field","children":[{"name":"Example - specify the column field"}],"type":"String","description":"The field to which the column is bound. The value of this field is displayed by the column during data binding.**The field name should be a valid Javascript identifier and should contain no spaces, no special characters, and the first character should be a letter.**"},{"name":"columns.expandable","children":[{"name":"Example - make the second column expandable"}],"type":"Boolean","default":" false","description":"If set to `true` the column will show the icons that are used for expanding and collapsing child rows. By default, the first column of the TreeList is expandable."},{"name":"columns.encoded","children":[{"name":"Example - prevent HTML encoding"}],"type":"Boolean","default":" true","description":"If set to `true` the column value will be HTML-encoded before it is displayed. If set to `false` the column value will be displayed as is. By default the column value is HTML-encoded."},{"name":"columns.editor","children":[{"name":"Example - create a custom column editor with validation"},{"name":"Example - create a custom column editor using the Kendo UI AutoComplete"},{"name":"Parameters","children":[{"name":"options.model `kendo.data.TreeListModel`"},{"name":"options.format `String`"},{"name":"options.field `String`"},{"name":"options `Object`"},{"name":"container `jQuery`"}]}],"type":"Function","description":"Provides a way to specify a custom editing UI for the column. Use the `container` parameter to create the editing UI.> The editing UI should contain an element whose `name` HTML attribute is set as the column [field](#configuration-columns.field).> Validation settings defined in the `model.fields` configuration will **not** be applied automatically. In order the validation to work, **the developer is responsible for attaching the corresponding validation attributes to the editor input**. In case the custom editor is a widget, the developer should [customize the validation warning tooltip position](/framework/validator/overview#customizing-the-tooltip-position) in order to avoid visual issues."},{"name":"columns.command.text","children":[{"name":"Example - customize the text of the command"}],"type":"String","description":"The text displayed by the command button. If not set the [name](#configuration-columns.command.name) option is used as the button text."},{"name":"columns.command.name","children":[{"name":"Example - set the command name"}],"type":"String","description":"The name of the command. The built-in commands are \"edit\", \"createChild\" and \"destroy\". When set to a custom value, it is rendered as a `data-command` attribute."},{"name":"columns.command.click","children":[{"name":"Example - handle the click event of the custom command button"}],"type":"Function","description":"The JavaScript function executed when the user clicks the command button. The function receives a [jQuery Event](http://api.jquery.com/category/events/event-object/) as an argument.The function context (available via the `this` keyword) will be set to the treelist instance."},{"name":"columns.command.className","children":[{"name":"Example - set the CSS class of the command"}],"type":"String","description":"The CSS class applied to the command button."},{"name":"columns.command","children":[{"name":"Example - set command as array of objects"},{"name":"Example - set command as array of strings"}],"type":"Array","description":"The configuration of the column command(s). If set the column would display a button for every command. Commands can be custom or built-in (\"edit\", \"createChild\" or \"destroy\"):* The \"edit\" built-in command switches the current table row to edit mode.* The \"createChild\" built-in command adds a new child item to the current table row and switches to edit mode.* The \"destroy\" built-in command removes the data item to which the current table row is bound.Custom commands are supported by specifying the [click](#configuration-columns.command.click) option.> The built-in \"edit\", \"createChild\" and \"destroy\" commands work *only* if editing is enabled via the [editable](#configuration-editable) option. The \"edit\" command supports \"inline\" and \"popup\" editing modes."},{"name":"columns.attributes","children":[{"name":"Example - specify column HTML attributes"}],"type":"Object","description":"HTML attributes of the table cell (`<td>`) rendered for the column.> HTML attributes which are JavaScript keywords (e.g. *class*) must be quoted."},{"name":"columns","children":[{"name":"Example - specify treelist columns as array of objects"},{"name":"Example - specify treelist columns as array of strings"}],"type":"Array","description":"The configuration of the treelist columns. An array of JavaScript objects or strings. JavaScript objects are interpreted as column configurations. Strings are interpreted as the[field](#configuration-columns.field) to which the column is bound. The treelist will create a column for every item of the array."},{"name":"autoBind","children":[{"name":"Example - disable automatic binding"}],"type":"Boolean","default":" true","description":"If set to `false` the widget will not bind to the data source during initialization. In this case data binding will occur when the [change](/api/javascript/data/datasource#events-change) event of thedata source is fired. By default the widget will bind to the data source specified in the configuration.> Setting `autoBind` to `false` is useful when multiple widgets are bound to the same data source. Disabling automatic binding ensures that the shared data source doesn't make more than one request to the remote service."}]}]}