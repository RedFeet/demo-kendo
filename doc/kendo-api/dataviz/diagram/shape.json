{"name":"kendo.dataviz.diagram.Shape","children":[{"name":"Methods","children":[{"name":"redraw","children":[{"name":"Parameters","children":[{"name":"Example - Redraw shape with new options"},{"name":"options `Object`"}]}],"parameters":[{"name":"Example - Redraw shape with new options","description":"    <div id=\"diagram\"></div>    <script>        $(\"#diagram\").kendoDiagram({          dataSource: {              data: [{ \"items\": [{ items: [{}] }] }],              schema: { model: { children: \"items\" } }          },          layout: {              type: \"tree\"          },          dataBound: function(e) {              e.sender.shapes[0].redraw({                  fill: {                      color: \"green\"                  }              });          }        });    </script>"},{"name":"options `Object`","description":"The object containing a subset of options to change. Follows the same structure as the [configuration](#configuration)."}],"description":"Renders the shape with the given options. It redefines the options and redraws the shape accordingly."},{"name":"getPosition","children":[{"name":"Parameters","children":[{"name":"side `String`"}]}],"parameters":[{"name":"side `String`","description":"One of the four sides of a bound; \"left\", \"right\", \"top\", \"bottom\". If none specified the center of the shape's bounds will be returned."}],"description":"Returns the middle positions of the sides of the bounds or the center of the shape's bounds. This method is useful when defining custom connectors where a position function relative to the shape's coordinate system is required."},{"name":"getConnector","parameters":[],"description":"Fetches a (default or custom) Connector defined on the Shape by its name."},{"name":"connections","children":[{"name":"Parameters","children":[{"name":"type `String`"}]}],"parameters":[{"name":"type `String`","description":"If not parameter specified all connections are returned, if \"in\" then only the incoming (i.e. towards the shape) are returned, if \"out\" the only the outgoing (i.e. away from the shape) are returned."}],"description":"Returns the connections attached to the shape. You can optionally specify to return only the incoming or outgoing connections."},{"name":"select","children":[{"name":"Parameters","children":[{"name":"value `Boolean`"}]}],"parameters":[{"name":"value `Boolean`","description":"Use 'true' to select the shape or 'false' to deselect it."}],"description":"Selects or deselects the shape."},{"name":"clone","children":[{"name":"Returns"}],"parameters":[],"description":"Returns a clone (with a different id) of the shape."},{"name":"position","children":[{"name":"Parameters","children":[{"name":"point `kendo.dataviz.diagram.Point`"}]}],"parameters":[{"name":"point `kendo.dataviz.diagram.Point`","description":"Either the location to set or if no parameter given returns the current location."}],"description":"Get or set method returning the current global position or sets the position specified."}]},{"name":"Fields","children":[{"name":"visual `kendo.dataviz.diagram.Group`"},{"name":"shapeVisual `Object`"},{"name":"dataItem `Object`"},{"name":"connectors `Array`"}]},{"name":"Configuration","children":[{"name":"visual","type":"Function","description":"A function returning a visual element to render for this shape."},{"name":"selectable","type":"Boolean","default":" true","description":"Specifies if the shape can be selected."},{"name":"content.align","type":"String","description":"The alignment of the text inside the shape."},{"name":"content.text","type":"String","description":"The text displayed in the shape."},{"name":"content","type":"Object","description":"Defines the shapes content settings."},{"name":"rotation.angle","type":"Number","default":" 0","description":"The rotation angle."},{"name":"rotation","type":"Object","description":"The shape rotation settings."},{"name":"connectors.position","type":"Function","description":"The function that positions the connector."},{"name":"connectors.description","type":"String","description":"The connector description."},{"name":"connectors.name","type":"String","description":"The connector name. Predefined names include:* \"top\" - top connector.* \"right\" - right connector.* \"bottom\" - bottom connector.* \"bottomRight\" - bottom right connector.* \"left\" - left connector.* \"auto\" - auto connector."},{"name":"connectors","type":"Array","description":"Defines the connectors the shape owns."},{"name":"hover.fill.opacity","type":"Number","default":" 1","description":"Defines the hover fill opacity of the shape."},{"name":"hover.fill.color","type":"String","description":"Defines the hover fill color of the shape."},{"name":"hover.fill","type":["String","Object"],"description":"Defines the hover fill options of the shape."},{"name":"hover","type":"Object","description":"Defines the hover configuration."},{"name":"fill.gradient.stops.opacity","type":"Number","description":"The fill opacity.Ranges from 0 (completely transparent) to 1 (completely opaque)."},{"name":"fill.gradient.stops.color","type":"String","description":"The color in any of the following formats.| Format         | Description| ---            | --- | ---| red            | [Basic](http://www.w3.org/TR/css3-color/#html4) or [Extended](http://www.w3.org/TR/css3-color/#svg-color) CSS Color name| #ff0000        | Hex RGB value| rgb(255, 0, 0) | RGB valueSpecifying 'none', 'transparent' or '' (empty string) will clear the fill."},{"name":"fill.gradient.stops.offset","type":"Number","description":"The stop offset from the start of the element.Ranges from 0 (start of gradient) to 1 (end of gradient)."},{"name":"fill.gradient.stops","type":"Array","description":"The array of gradient color stops."},{"name":"fill.gradient.end","type":"Array","description":"The end point of the linear gradient.Coordinates are relative to the shape bounding box.For example [0, 0] is top left and [1, 1] is bottom right."},{"name":"fill.gradient.start","type":"Array","description":"The start point of the linear gradient.Coordinates are relative to the shape bounding box.For example [0, 0] is top left and [1, 1] is bottom right."},{"name":"fill.gradient.radius","type":"Number","default":" 1","description":"The radius of the radial gradient relative to the shape bounding box."},{"name":"fill.gradient.center","type":"Array","description":"The center of the radial gradient.Coordinates are relative to the shape bounding box.For example [0, 0] is top left and [1, 1] is bottom right."},{"name":"fill.gradient.type","type":"String","default":" \"linear\"","description":"The type of the gradient. Supported values are:* linear* radialNote that support for radial gradients in VML (IE8 and below) is limited.Not all configurations are guaranteed to work."},{"name":"fill.gradient","type":"Object","description":"Defines the gradient fill of the shape."},{"name":"fill.opacity","type":"Number","default":" 1","description":"Defines the fill opacity of the shape."},{"name":"fill.color","type":"String","description":"Defines the fill color of the shape."},{"name":"fill","type":["String","Object"],"description":"Defines the fill options of the shape."},{"name":"height","type":"Number","default":" 100","description":"Defines the height of the shape when added to the diagram."},{"name":"width","type":"Number","default":" 100","description":"Defines the width of the shape when added to the diagram."},{"name":"minHeight","type":"Number","default":" 20","description":"Defines the minimum height the shape should have, i.e. it cannot be resized to a value smaller than the given one."},{"name":"minWidth","type":"Number","default":" 20","description":"Defines the minimum width the shape should have, i.e. it cannot be resized to a value smaller than the given one."},{"name":"y","type":"Number","default":" 0","description":"Defines the y-coordinate of the shape when added to the diagram."},{"name":"x","type":"Number","default":" 0","description":"Defines the x-coordinate of the shape when added to the diagram."},{"name":"type","type":"String","default":" \"rectangle\"","description":"Specifies the type of the Shape using any of the built-in shape type.* \"rectangle\": this is the default option, representing a SVG Rectangle* \"circle\" : a SVG circle/ellipse"},{"name":"stroke.dashType","type":"String","description":"The dash type of the shape.The following dash types are supported:* \"dash\" - a line consisting of dashes* \"dashDot\" - a line consisting of a repeating pattern of dash-dot* \"dot\" - a line consisting of dots* \"longDash\" - a line consisting of a repeating pattern of long-dash* \"longDashDot\" - a line consisting of a repeating pattern of long-dash-dot* \"longDashDotDot\" - a line consisting of a repeating pattern of long-dash-dot-dot* \"solid\" - a solid line"},{"name":"stroke.width","type":"Number","default":" 1","description":"Defines the thickness or width of the shape's stroke."},{"name":"stroke.color","type":"String","description":"Defines the color of the shape's stroke."},{"name":"stroke","type":"Object","description":"Defines the stroke configuration."},{"name":"path","type":"String","description":"The path option of a Shape is a description of a custom geometry. The format follows the standard SVG format (http://www.w3.org/TR/SVG/paths.html#PathData \"SVG Path data.\")."},{"name":"editable.connect","type":"Boolean","description":"Specifies whether the connectors should appear on hover."},{"name":"editable","type":["Boolean","Object"],"default":" true","description":"Defines the shape editable options."},{"name":"id","type":"String","description":"The unique identifier for a Shape."}]}]}