{"name":"kendo.dataviz.diagram.Connection","children":[{"name":"Methods","children":[{"name":"redraw","children":[{"name":"Parameters","children":[{"name":"Example - changing the Connection after it has been added"},{"name":"options `Object` *optional*"}]}],"parameters":[{"name":"Example - changing the Connection after it has been added","description":"    <div id=\"diagram\"></div>    <script>        var Point = kendo.dataviz.diagram.Point;        var diagram = $(\"#diagram\").kendoDiagram({ }).getKendoDiagram();        var connection = diagram.connect(new Point(10,10), new Point(200,70));        connection.redraw({            stroke: {                color: \"orange\"            },            points:[new Point(200,10)]        });    </script>"},{"name":"options `Object` *optional*","description":"The new options for the connection. This object should follow the configuration structure."}],"description":"Redraws the Connection with the given options."},{"name":"allPoints","children":[{"name":"Returns"}],"parameters":[],"description":"Gets all points of the Connection.This is the union of the endpoints and the intermediate points."},{"name":"points","children":[{"name":"Returns"}],"parameters":[],"description":"Gets the intermediate points of the connection."},{"name":"type","children":[{"name":"Parameters","children":[{"name":"value `String` *(default: \"Polyline\")*"}]}],"parameters":[{"name":"value `String` *(default: \"Polyline\")*","description":"* \"Polyline\" - connects the defined intermediate points. See the points() method.* \"Cascading\" - discards given points and defines a cascading path between the endpoints."}],"description":"Gets or sets the (sub-) type of the Connection which defines the way it routes.The routing of a connection is the way that intermediate points of a Connection defines a route. A route is usually defined on the basis of constraints or behaviors. Currently the framework defines a default polyline route (which simply connects the given intermediate points) and a simple rectangular (aka cascading) route. The cascading type is useful when using tree layout and hierarchies; the routed Connection will in this case enhance the representation of the hierarchy and thus reproduce a classic organization diagram."},{"name":"select","children":[{"name":"Parameters","children":[{"name":"value `Boolean` *(default: true)*"}]}],"parameters":[{"name":"value `Boolean` *(default: true)*","description":"True to select the Connection and `false` to deselect it."}],"description":"Select or deselects the Connection."},{"name":"targetPoint","children":[{"name":"Returns"}],"parameters":[],"description":"Similar to the sourcePoint, this gets the coordinates of the target of the Connection independently of its endpoint attachement."},{"name":"target","children":[{"name":"Returns"},{"name":"Parameters","children":[{"name":"target `kendo.dataviz.diagram.Shape|kendo.dataviz.diagram.Point|kendo.dataviz.diagram.Connector`"}]}],"parameters":[{"name":"target `kendo.dataviz.diagram.Shape|kendo.dataviz.diagram.Point|kendo.dataviz.diagram.Connector`","description":"* Point: any Point on the canvas. This creates an unattached floating endpoint.* Shape: will bind the endpoint to the\"Auto\" Connector which will switch between the other connectors to minimize the length of the connection.* Connector: the connection's endpoint will remain fixed attached to the specified Connector.If no source is specified the method will return the current object to which the Connection's endpoint is attached."}],"description":"Gets or set the target of the Connection.This object can be a Point for a floating endpoint (i.e. not attached to a shape), a Shape or a Connector of a Shape. You can use the Shape.getConnector() method to fetch a Connector on the basis of its name. If a Shape is specified the Connection will attach to the \"Auto\" connector."},{"name":"sourcePoint","children":[{"name":"Returns"}],"parameters":[],"description":"Gets the global coordinate of the connection's start (initial endpoint).The method returns a Point independently of the object to which the source is attached."},{"name":"source","children":[{"name":"Returns"},{"name":"Parameters","children":[{"name":"source `kendo.dataviz.diagram.Shape|kendo.dataviz.diagram.Point|kendo.dataviz.diagram.Connector`"}]}],"parameters":[{"name":"source `kendo.dataviz.diagram.Shape|kendo.dataviz.diagram.Point|kendo.dataviz.diagram.Connector`","description":"* Point: any Point on the canvas. This creates an unattached floating endpoint.* Shape: will bind the endpoint to the\"Auto\" Connector which will switch between the other connectors to minimize the length of the connection.* Connector: the connection's endpoint will remain fixed attached to the specified Connector.If no source is specified the method will return the current object to which the Connection's endpoint is attached."}],"description":"Gets or sets the current source of the connection.This object can be a Point for a floating endpoint (i.e. not attached to a shape), a Shape or a Connector of a Shape. You can use the Shape.getConnector() method to fetch a Connector on the basis of its name. If a Shape is specified the Connection will attach to the \"Auto\" connector."}]},{"name":"Fields","children":[{"name":"to `kendo.dataviz.diagram.Shape`"},{"name":"targetConnector `kendo.dataviz.diagram.Connector`"},{"name":"sourceConnector `kendo.dataviz.diagram.Connector`"},{"name":"from `kendo.dataviz.diagram.Shape`"},{"name":"dataItem `Object`"}]},{"name":"Configuration","children":[{"name":"type","type":"String","description":"Specifies the connection type. The supported values are `\"polyline\"` and `\"cascading\"`."},{"name":"toY","type":"Number","description":"The absolute point (Y-coordinate), if any, that the connection is pointing to."},{"name":"toX","type":"Number","description":"The absolute point (X-coordinate), if any, that the connection is pointing to."},{"name":"toConnector","type":"String","default":" \"Auto\"","description":"Specifies the name of the target shape connector that should be used by default."},{"name":"selectable","type":"Boolean","default":" true","description":"Specifies if the connection can be selected."},{"name":"points.y","type":"Number","description":"Sets the Y coordinate of the point."},{"name":"points.x","type":"Number","description":"Sets the X coordinate of the point."},{"name":"points","children":[{"name":"Example - setting intermediate connection points"}],"type":"Array","description":"Sets the intermediate points (in global coordinates) of the connection."},{"name":"endCap.type","type":"String","default":" \"none\"","description":"The connection end cap type.The supported values are:* \"none\": no cap* \"ArrowEnd\": a filled arrow* \"FilledCircle\": a filled circle"},{"name":"endCap.stroke.width","type":"Number","description":"The connection end cap stroke width."},{"name":"endCap.stroke.dashType","type":"String","description":"The connection end cap stroke dash type."},{"name":"endCap.stroke.color","type":"String","description":"The connection end cap stroke color."},{"name":"endCap.stroke","type":["String","Object"],"description":"The connection end cap stroke options or color."},{"name":"endCap.fill.opacity","description":"The connection end cap fill opacity."},{"name":"endCap.fill.color","type":"String","default":" \"black\"","description":"The connection end cap fill color."},{"name":"endCap.fill","type":["String","Object"],"description":"The connection end cap fill options or color."},{"name":"endCap","children":[{"name":"Example - configuring the connection end cap"}],"type":["String","Object"],"description":"The connection end cap configuration or type name."},{"name":"startCap.type","type":"String","default":" \"none\"","description":"The connection start cap type.The supported values are:* \"none\": no cap* \"ArrowStart\": a filled arrow* \"FilledCircle\": a filled circle"},{"name":"startCap.stroke.width","type":"Number","description":"The connection start cap stroke width."},{"name":"startCap.stroke.dashType","type":"String","description":"The connection start cap stroke dash type."},{"name":"startCap.stroke.color","type":"String","description":"The connection start cap stroke color."},{"name":"startCap.stroke","type":["String","Object"],"description":"The connection start cap stroke options or color."},{"name":"startCap.fill.opacity","description":"The connection start cap fill opacity."},{"name":"startCap.fill.color","type":"String","default":" \"black\"","description":"The connection start cap fill color."},{"name":"startCap.fill","type":["String","Object"],"description":"The connection start cap fill options or color."},{"name":"startCap","children":[{"name":"Example - configuring the connection start cap"}],"type":["String","Object"],"description":"The connection start cap configuration or type name."},{"name":"hover.stroke.color","children":[{"name":"Example setting color and hovering color of the connection"}],"type":"String","description":"Defines the highlight color when the pointer is hovering over the connection."},{"name":"hover.stroke","type":"Object","description":"Defines the hover stroke configuration."},{"name":"hover","type":"Object","description":"Defines the hover configuration."},{"name":"stroke.color","children":[{"name":"Example - setting the stroke of a Connection"}],"type":"String","description":"Defines the stroke or line color of the connection."},{"name":"stroke","type":"Object","description":"Defines the stroke configuration."},{"name":"fromY","type":"Number","description":"The absolute point (Y-coordinate), if any, that the connection is originating from."},{"name":"fromX","type":"Number","description":"The absolute point (X-coordinate), if any, that the connection is originating from."},{"name":"fromConnector","type":"String","default":" \"Auto\"","description":"Specifies the name of the source shape connector that should be used by default."},{"name":"content.visual","type":"Function","description":"A function returning a visual element to render for the content of a connection."},{"name":"content.text","type":"String","description":"The static text displayed on the connection."},{"name":"content.template","type":["String","Function"],"description":"The [template](/api/javascript/kendo#methods-template) which renders the labels.The fields which can be used in the template are:* dataItem - the data item, in case a field has been specified"},{"name":"content","type":"Object","description":"Defines the label displayed on the connection path."}]}]}