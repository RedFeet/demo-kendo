{"name":"kendo.spreadsheet.Range","children":[{"name":"Methods","children":[{"name":"wrap","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Boolean` *optional*"}]}],"parameters":[{"name":"value `Boolean` *optional*","description":"`true` if to enable wrapping, `false` otherwise."}],"description":"Gets or sets the wrap of the range cells."},{"name":"verticalAlign","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String` *optional*"}]}],"parameters":[{"name":"value `String` *optional*","description":"One of the following values: \"top\", \"center\" and \"bottom\"."}],"description":"Gets or sets the vertical alignment of the cells in the range."},{"name":"value","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String|Number|Date` *optional*"}]}],"parameters":[{"name":"value `String|Number|Date` *optional*","description":"The value to be set to the cells."}],"description":"Gets or sets the value of the cells.> If the cell has formula set, the value setting will clear it."},{"name":"validation","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Object` *optional*"}]}],"parameters":[{"name":"value `Object` *optional*","description":"The validation configuration object. It may contain `type`, `comparerType`, `dataType`, `from`, `to`, `allowNulls`, `messageTemplate` and `titleTemplate` keys.The `type` Can be set to \"warning\" or \"reject\". By default the type is \"warning\".The `comparerType` Can be set to \"greaterThan\", \"lessThan\", \"between\", \"equalTo\", \"notEqualTo\", \"greaterThanOrEqualTo\", \"lessThanOrEqualTo\", \"notBetween\" or \"custom\".The `dataType` Can be set to \"date\", \"text\", \"number\" or \"custom\".The `from` This key holds formula or value. Used as first or only compare value depending on specified comparer.The `to` This key can be set to formula or value. It's optional depending on the specified comparer.The `allowNulls` Can be set to boolean value.The `messageTemplate` The message which will be displayed in the \"reject\" validation window.The `titleTemplate` The title of the \"reject\" validation window."}],"description":"Gets or sets the validation of the cells."},{"name":"values","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"values `Array`"}]}],"parameters":[{"name":"values `Array`","description":"The cell values."}],"description":"Sets the values of the range cells. The argument should be an array of arrays which match the dimensions of the range."},{"name":"unmerge","parameters":[],"description":"Un-merges any merged cells which are included in the range.```<div id=\"spreadsheet\"></div><script type=\"text/javascript\" charset=\"utf-8\">    $(\"#spreadsheet\").kendoSpreadsheet();    var spreadsheet = $(\"#spreadsheet\").data(\"kendoSpreadsheet\");    var sheet = spreadsheet.activeSheet();    sheet.range(\"A1:B2\").merge();    sheet.range(\"B3:C3\").merge();    sheet.range(\"A1:D4\").unmerge(); // this will unmerge both merged cells.</script>```"},{"name":"textAlign","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String` *optional*"}]}],"parameters":[{"name":"value `String` *optional*","description":"One of the following values: \"left\", \"center\", \"right\" and \"justify\"."}],"description":"Gets or sets the text alignment of the cells in the range."},{"name":"sort","children":[{"name":"Example - sort a column in descending order"},{"name":"Example - sort a single column"},{"name":"Parameters","children":[{"name":"sort `Number | Object | Array`"}]}],"parameters":[{"name":"sort `Number | Object | Array`","description":"Determines the action performed by the method.* Passing a number `n` sorts the `n`th column in the range, in ascending order.* Passing a `{ column: Number, ascending: Boolean }` sorts the respective column in ascending / descending order, based on the ascending parameter. The column index is relative to the beginning of the range.* Passing an array of `{ column: Number, ascending: Boolean }` objects sorts each column, specified by the index."}],"description":"Sorts the rows in the range."},{"name":"select","parameters":[],"description":"Sets the sheet selection to the range cells.```<div id=\"spreadsheet\"></div><script type=\"text/javascript\" charset=\"utf-8\">    $(\"#spreadsheet\").kendoSpreadsheet();    var spreadsheet = $(\"#spreadsheet\").data(\"kendoSpreadsheet\");    var sheet = spreadsheet.activeSheet();    sheet.range(\"A1:B2\").select();</script>```"},{"name":"merge","children":[{"name":"Example"}],"parameters":[],"description":"Merges the range cells into a single merged cell. If the range already includes a merged cell, they are merged, too."},{"name":"italic","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Boolean` *optional*"}]}],"parameters":[{"name":"value `Boolean` *optional*","description":"True will make the text of the cells italic; false otherwise."}],"description":"Gets or sets the italic state of the cells in the range."},{"name":"isFilterable","children":[{"name":"Example"},{"name":"Returns"}],"parameters":[],"description":"Returns if a range can be filtered."},{"name":"isSortable","children":[{"name":"Example"},{"name":"Returns"}],"parameters":[],"description":"Returns if a range can be sorted."},{"name":"input","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String|Number|Date` *optional*"}]}],"parameters":[{"name":"value `String|Number|Date` *optional*","description":"The value to be set to the cells."}],"description":"Gets or sets the value of the cells.  This is similar to `value`, but it parses the argument as if it was entered through the text box:- if it starts with `=` (equal sign), a *formula* is set.  This may throw an error if the formula is syntactically invalid.  Example: `range(\"C1\").input(\"=A1+B1\")`.- if it looks like a number, a numeric value (not string) is set.- if it's `true` or `false` (case-insensitive) the respective boolean value is set.- if it's a `Date` object, or a string that can be parsed as a date, it is converted to the numerical representation of the date.- if it starts with `'` (single quote), a string containing the rest of the characters is set.  Example: `range(\"A1\").input(\"'TRUE\")` — sets the *text* \"TRUE\", not the boolean."},{"name":"hasFilter","children":[{"name":"Example - clear the filters for a column"},{"name":"Returns"}],"parameters":[],"description":"Returns `true` if the sheet of the range has filter enabled."},{"name":"formula","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"formula `String` *optional*"}]}],"parameters":[{"name":"formula `String` *optional*","description":"The new formula of the cell. The string may optionally start with `=`."}],"description":"Gets or sets the formula of the cells."},{"name":"format","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"format `String` *optional*"}]}],"parameters":[{"name":"format `String` *optional*","description":"The new format for the cells."}],"description":"Gets or sets the format of the cells."},{"name":"fontSize","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Number` *optional*"}]}],"parameters":[{"name":"value `Number` *optional*","description":"The font size (in pixels) that should be set."}],"description":"Gets or sets the font size of the cells in the range."},{"name":"fontFamily","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String` *optional*"}]}],"parameters":[{"name":"value `String` *optional*","description":"The font family that should be set."}],"description":"Gets or sets the font family of the cells in the range."},{"name":"filter","children":[{"name":"Example - set multiple filters"},{"name":"Example - set filter"},{"name":"Example - disable filter"},{"name":"Example - enable filter"},{"name":"Parameters","children":[{"name":"filter `Boolean | Object | Array`"}]}],"parameters":[{"name":"filter `Boolean | Object | Array`","description":"Determines the action performed by the method.* Passing `true` enables the filtering for the given range.* Passing `false` disables and clears the set filters.* Passing a `{ column: Number, filter: kendo.spreadsheet.Filter }` object applies the filter to the respective column.* Passing an array of `{ column: Number, filter: kendo.spreadsheet.Filter }` objects applies each filter to the respective column. The column index is relative to the beginning of the range."}],"description":"Enables/disables or sets the filter for a given range."},{"name":"fillFrom","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"direction `Number` *optional*"},{"name":"srcRange `Range | String`"}]}],"parameters":[{"name":"direction `Number` *optional*","description":"Specifies the fill direction.  If the source range (`srcRange`) and target range (the current object) are adjacent, thefill direction can be inferred from their positions, so it can be missing.  For example:```    sheet.range(\"B2:C3\").fillFrom(\"B4:C5\")```In this case it will select vertical reverse filling, because the target range is above the source range.If the ranges are not adjacent and the direction is missing, an exception will be thrown if the ranges don't starteither on same column or on the same row (\"Cannot determine fill direction\").Possible values for direction:- 0 — fill top-down- 1 — fill left-to-right- 2 — fill bottom-up- 3 — fill right-to-left"},{"name":"srcRange `Range | String`","description":"The source range.  It must have the same number of rows or the same number of columns as the current range — otherwisean exception will be thrown (\"Incompatible auto-fill ranges\")."}],"description":"Fills a range with values inferred from a source range.  This method employs some heuristics similar to what Excel's auto-filling algorithm does when you select a range of cells and drag the bottom-right handle.  The range to be filled is the current object, and you must pass a source range containing data as first argument."},{"name":"enable","children":[{"name":"Example"},{"name":"Returns"},{"name":"value `Boolean` *optional*"}],"parameters":[],"description":"Gets or sets the disabled state of the cells in the range."},{"name":"clearFilter","children":[{"name":"Example - clear the filters for a column"},{"name":"Parameters","children":[{"name":"indices `Array | Number`"}]}],"parameters":[{"name":"indices `Array | Number`","description":"The column(s) which filters should be cleared."}],"description":"Clears the set filters for the given column(s). The indices is relative to the beginning of the range."},{"name":"clear","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"options `Object` *optional*"}]}],"parameters":[{"name":"options `Object` *optional*","description":"An object which may contain `contentsOnly: true` or `formatOnly: true` key values. Clearing the format will remove the cell formatting and visual styles.If a parameter is not passed, the method will clear both the cells values and the formatting."}],"description":"Clears the contents of the range cells."},{"name":"color","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String` *optional*"}]}],"parameters":[{"name":"value `String` *optional*","description":"Any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)."}],"description":"Gets or sets the text color of the range."},{"name":"borderTop","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Object` *optional*"}]}],"parameters":[{"name":"value `Object` *optional*","description":"The border configuration object. It may contain `size` and `color` keys.The `color` may be set to any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).The `size` accepts any valid [Length value](https://developer.mozilla.org/en-US/docs/Web/CSS/length)."}],"description":"Gets or sets the state of the top border of the cells. If the range includes more than a single cell, the setting is applied to all cells."},{"name":"borderRight","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Object` *optional*"}]}],"parameters":[{"name":"value `Object` *optional*","description":"The border configuration object. It may contain `size` and `color` keys.The `color` may be set to any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).The `size` accepts any valid [Length value](https://developer.mozilla.org/en-US/docs/Web/CSS/length)."}],"description":"Gets or sets the state of the right border of the cells. If the range includes more than a single cell, the setting is applied to all cells."},{"name":"borderLeft","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Object` *optional*"}]}],"parameters":[{"name":"value `Object` *optional*","description":"The border configuration object. It may contain `size` and `color` keys.The `color` may be set to any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).The `size` accepts any valid [Length value](https://developer.mozilla.org/en-US/docs/Web/CSS/length)."}],"description":"Gets or sets the state of the left border of the cells. If the range includes more than a single cell, the setting is applied to all cells."},{"name":"borderBottom","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `Object` *optional*"}]}],"parameters":[{"name":"value `Object` *optional*","description":"The border configuration object. It may contain `size` and `color` keys.The `color` may be set to any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value).The `size` accepts any valid [Length value](https://developer.mozilla.org/en-US/docs/Web/CSS/length)."}],"description":"Gets or sets the state of the bottom border of the cells. If the range includes more than a single cell, the setting is applied to all cells."},{"name":"bold","children":[{"name":"Example"},{"name":"Returns"},{"name":"value `Boolean` *optional*"}],"parameters":[],"description":"Gets or sets the bold state of the cells in the range."},{"name":"background","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"value `String` *optional*"}]}],"parameters":[{"name":"value `String` *optional*","description":"Any valid [CSS color](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value)."}],"description":"Gets or sets the background color of the cells in the range."}]}]}