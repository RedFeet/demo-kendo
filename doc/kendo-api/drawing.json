{"name":"kendo.drawing","children":[{"name":"Methods","children":[{"name":"wrap","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"rect `kendo.geometry.Rect`"},{"name":"elements `Array`"}]}],"parameters":[{"name":"rect `kendo.geometry.Rect`","description":"The rectangle in which the elements should be wrapped."},{"name":"elements `Array`","description":"An array with the drawing elements that should be wrapped."}],"description":"Stacks drawing elements horizontally. Multiple stacks will be used if the elements width exceeds the given rectangle width."},{"name":"vWrap","children":[{"name":"Example"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"rect `kendo.geometry.Rect`"},{"name":"elements `Array`"}]}],"parameters":[{"name":"rect `kendo.geometry.Rect`","description":"The rectangle in which the elements should be wrapped."},{"name":"elements `Array`","description":"An array with the drawing elements that should be wrapped."}],"description":"Stacks drawing elements vertically. Multiple stacks will be used if the elements height exceeds the given rectangle height."},{"name":"vStack","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"elements `Array`"}]}],"parameters":[{"name":"elements `Array`","description":"An array with the drawing elements that should be stacked."}],"description":"Stacks drawing elements vertically."},{"name":"vAlign","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"alignment `String`"},{"name":"rect `kendo.geometry.Rect`"},{"name":"elements `Array`"}]}],"parameters":[{"name":"alignment `String`","description":"Specifies how should the elements be aligned. The supported values are:* \"start\" - the elements will be aligned to the rectangle origin.* \"center\" - the elements will be aligned to the rectangle center.* \"end\" - the elements will be aligned to the bottom side of the rectangle."},{"name":"rect `kendo.geometry.Rect`","description":"The rectangle in which the elements should be aligned."},{"name":"elements `Array`","description":"An array with the drawing elements that should be aligned."}],"description":"Aligns drawing elements y axis position to a given rectangle."},{"name":"stack","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"elements `Array`"}]}],"parameters":[{"name":"elements `Array`","description":"An array with the drawing elements that should be stacked."}],"description":"Stacks drawing elements horizontally."},{"name":"fit","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"rect `kendo.geometry.Rect`"},{"name":"element `kendo.drawing.Element`"}]}],"parameters":[{"name":"rect `kendo.geometry.Rect`","description":"The rectangle in which the elements should be fitted."},{"name":"element `kendo.drawing.Element`","description":"The drawing element that should be fitted."}],"description":"Scales uniformly an element so that it fits in a given rectangle. No scaling will be applied if the element is already small enough to fit in the rectangle."},{"name":"exportSVG","children":[{"name":"Example - Exporting a drawing to an SVG document"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"options.raw `Boolean` *(default: false)*"},{"name":"options `Object` *optional*"},{"name":"group `kendo.drawing.Group`"}]}],"parameters":[{"name":"options.raw `Boolean` *(default: false)*","description":"Resolves the promise with the raw SVG document without the Data URI prefix."},{"name":"options `Object` *optional*","description":"Export options."},{"name":"group `kendo.drawing.Group`","description":"The root group containing all elements to export."}],"description":"Exports a group of drawing elements as an SVG document.The group will be positioned at [0, 0] in the exported file. It's dimensions will be used as default dimensions for the image.The export operation is asynchronous and returns a [promise](http://api.jquery.com/Types/#Promise).The promise will be resolved with a SVG document encoded as a [Data URI](https://developer.mozilla.org/en-US/docs/data_URIs)."},{"name":"exportPDF","children":[{"name":"Example - Exporting a drawing to a PDF file"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"options `kendo.drawing.PDFOptions`"},{"name":"group `kendo.drawing.Group`"}]}],"parameters":[{"name":"options `kendo.drawing.PDFOptions`","description":"Parameters for the exported PDF file."},{"name":"group `kendo.drawing.Group`","description":"The root group containing all elements to export."}],"description":"Exports a group of drawing elements as a PDF file.The group will be positioned at [0, 0] in the exported file. It's dimensions will be used as default dimensions for the image.The export operation is asynchronous and returns a [promise](http://api.jquery.com/Types/#Promise).The promise will be resolved with a PDF file encoded as a [Data URI](https://developer.mozilla.org/en-US/docs/data_URIs).> Scene images must be of same origin or [CORS-enabled](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image)."},{"name":"exportImage","children":[{"name":"Example - Position the scene within a larger image"},{"name":"Example - Exporting a drawing to an image"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"options.cors `String` *(default: \"anonymous\")*"},{"name":"options.height `String`"},{"name":"options.width `String`"},{"name":"options `Object`"},{"name":"group `kendo.drawing.Group`"}]}],"parameters":[{"name":"options.cors `String` *(default: \"anonymous\")*","description":"Specifies how [cross-origin images](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image)should be requested.Requesting images without CORS will \"taint\" the canvas. It will still be visible on the page, but allscript access to it is disabled to prevent information disclosure.By default they're requested anonymously. Available options are:* \"anonymous\" - do not send user credentials as part of the request* \"use-credentials\" - send credentials as part of the request* false - fetch images without CORS, possibly tainting the canvasSee [crossorigin attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-crossorigin)for more details."},{"name":"options.height `String`","description":"The height of the exported image. Defaults to the scene height."},{"name":"options.width `String`","description":"The width of the exported image. Defaults to the scene width."},{"name":"options `Object`","description":"Parameters for the exported image."},{"name":"group `kendo.drawing.Group`","description":"The root group containing all elements to export."}],"description":"Exports a group of drawing elements as an image.The group will be positioned at [0, 0] in the exported image. It's dimensions will be used as default dimensions for the image.The export operation is asynchronous and returns a [promise](http://api.jquery.com/Types/#Promise).The promise will be resolved with a PNG image encoded as a [Data URI](https://developer.mozilla.org/en-US/docs/data_URIs).> *Important*>> Scene images must be of same origin or [CORS-enabled](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image)."},{"name":"drawDOM","children":[{"name":"Example - Exporting a DOM element to an image"},{"name":"Returns"},{"name":"Parameters","children":[{"name":"options.template `String`"},{"name":"options. margin.top `Number|String` *(default: 0)*"},{"name":"options. margin.right `Number|String` *(default: 0)*"},{"name":"options. margin.left `Number|String` *(default: 0)*"},{"name":"options. margin.bottom `Number|String` *(default: 0)*"},{"name":"options.margin `String|Object`"},{"name":"options.paperSize `String` *(default: \"auto\")*"},{"name":"options.forcePageBreak `String`"},{"name":"options.avoidLinks `Boolean|String` *(default: false)*"},{"name":"options `Object`"},{"name":"element `jQuery`"}]}],"parameters":[{"name":"options.template `String`","description":"The [page template](/framework/drawing/drawing-dom#page-template-headers-and-footers) for multi-page output."},{"name":"options. margin.top `Number|String` *(default: 0)*","description":"The top margin. Numbers are considered as \"pt\" units."},{"name":"options. margin.right `Number|String` *(default: 0)*","description":"The right margin. Numbers are considered as \"pt\" units."},{"name":"options. margin.left `Number|String` *(default: 0)*","description":"The left margin. Numbers are considered as \"pt\" units."},{"name":"options. margin.bottom `Number|String` *(default: 0)*","description":"The bottom margin. Numbers are considered as \"pt\" units."},{"name":"options.margin `String|Object`","description":"Specifies the margins of the page (numbers or strings with units). Supportedunits are \"mm\", \"cm\", \"in\" and \"pt\" (default)."},{"name":"options.paperSize `String` *(default: \"auto\")*","description":"The paper size for [automatic page breaking](/framework/drawing/drawing-dom#automatic-page-breaking-q1-2015).The default \"auto\" means paper size is determined by content.Supported values:* A predefined size: \"A4\", \"A3\" etc* An array of two numbers specifying the width and height in points (1pt = 1/72in)* An array of two strings specifying the width and height in units.  Supported units are \"mm\", \"cm\", \"in\" and \"pt\"."},{"name":"options.forcePageBreak `String`","description":"An optional CSS selector that specifies the elements that should cause page breaks.See [Multi-page PDF output](/framework/drawing/drawing-dom#multi-page-pdf-output)."},{"name":"options.avoidLinks `Boolean|String` *(default: false)*","description":"A flag indicating whether to produce clickable hyperlinks in the exported PDF file.It's also possible to pass a CSS selector as argument. All matching links will be ignored."},{"name":"options `Object`","description":"Configuration options"},{"name":"element `jQuery`","description":"The root DOM element to draw."}],"description":"Converts the given DOM element to a [Drawing API](/framework/drawing/overview) scene.The operation is asynchronous and returns a [promise](http://api.jquery.com/Types/#Promise).The promise will be resolved with the root [Group](drawing/group) of the scene."},{"name":"align","children":[{"name":"Example"},{"name":"Parameters","children":[{"name":"alignment `String`"},{"name":"rect `kendo.geometry.Rect`"},{"name":"elements `Array`"}]}],"parameters":[{"name":"alignment `String`","description":"Specifies how should the elements be aligned. The supported values are:* \"start\" - the elements will be aligned to the rectangle origin.* \"center\" - the elements will be aligned to the rectangle center.* \"end\" - the elements will be aligned to the right side of the rectangle."},{"name":"rect `kendo.geometry.Rect`","description":"The rectangle in which the elements should be aligned."},{"name":"elements `Array`","description":"An array with the drawing elements that should be aligned."}],"description":"Aligns drawing elements x axis position to a given rectangle."}]}]}